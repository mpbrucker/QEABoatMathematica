(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    267901,       5463]
NotebookOptionsPosition[    261206,       5259]
NotebookOutlinePosition[    261703,       5279]
CellTagsIndexPosition[    261660,       5276]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Candidate Boat Designs", "Title",
 CellChangeTimes->{{3.695249222217491*^9, 3.69524922905873*^9}}],

Cell[CellGroupData[{

Cell["3D Functions", "Subsection",
 CellChangeTimes->{{3.6952505612197795`*^9, 3.6952505637013955`*^9}, {
  3.6952522872941933`*^9, 3.695252290552759*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"boat1", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"y", "/", "n"}], "]"}], "^", 
    RowBox[{"(", 
     RowBox[{"1", "/", "3"}], ")"}]}], "<=", "z", "\[LessEqual]", 
   "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expBoat", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"y", "/", 
       RowBox[{"(", 
        RowBox[{"n", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", "4"}], ")"}]}], ")"}]}], "]"}], 
     "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "-", "4"}], ")"}], "/", "6"}]}], 
   "\[LessEqual]", "z", "\[LessEqual]", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expBoat2D", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"Abs", "[", 
      RowBox[{"y", "/", 
       RowBox[{"(", 
        RowBox[{"n", "*", 
         RowBox[{"-", "4"}]}], ")"}]}], "]"}], "]"}], "-", 
    RowBox[{"(", 
     RowBox[{"2", "/", "3"}], ")"}]}], "\[LessEqual]", "z", "\[LessEqual]", 
   "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"powBoat", "[", "pow_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "*", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"y", "/", "2"}], "]"}], "^", "pow"}]}], ")"}], "+", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "2"}]}], "\[LessEqual]", "z", 
    "\[LessEqual]", "2"}], " ", "&&", " ", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[LessEqual]", " ", "x", "\[LessEqual]", " ", 
    "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubicBoat", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "/", 
          RowBox[{"(", 
           RowBox[{"n", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "^", "2"}], "-", "4"}], ")"}]}], ")"}]}], ")"}], 
        "-", "1"}], ")"}], "^", "3"}], "+", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "2"}], "+", "1"}], "\[LessEqual]", "z", 
    "\[LessEqual]", "2"}], "&&", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "/", 
           RowBox[{"(", 
            RowBox[{"n", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "^", "2"}], "-", "4"}], ")"}]}], ")"}]}], ")"}], 
         "+", "1"}], ")"}], "^", "3"}]}], "+", "1", "+", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "2"}]}], "\[LessEqual]", "z", 
    "\[LessEqual]", "2"}], "&&", 
   RowBox[{
    RowBox[{"-", "1.99"}], "\[LessEqual]", "x", "\[LessEqual]", 
    "1.99"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polyBoat", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "*", 
     RowBox[{"Fit", "[", 
      RowBox[{"points", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "y", ",", 
         RowBox[{"y", "^", "2"}], ",", 
         RowBox[{"y", "^", "3"}], ",", 
         RowBox[{"y", "^", "4"}]}], "}"}], ",", "y"}], "]"}]}], 
    "\[LessEqual]", "z", "\[LessEqual]", "2"}], "&&", 
   RowBox[{
    RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", 
    "2"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6952505692672806`*^9, 3.6952506008925295`*^9}, {
   3.6952506627201233`*^9, 3.695250665514573*^9}, {3.6952507290162354`*^9, 
   3.6952507379289894`*^9}, {3.6952507684486647`*^9, 
   3.6952508181267147`*^9}, {3.695250858862786*^9, 3.6952510364884467`*^9}, {
   3.6952510892219543`*^9, 3.6952511309840603`*^9}, {3.695251226098352*^9, 
   3.6952512283382196`*^9}, {3.695251300294705*^9, 3.6952513105005054`*^9}, {
   3.6952514166154823`*^9, 3.695251418813326*^9}, {3.6952514732782173`*^9, 
   3.695251549032591*^9}, {3.6952516174339848`*^9, 3.695251644252881*^9}, {
   3.6952516819344406`*^9, 3.69525175924802*^9}, {3.6952517973142357`*^9, 
   3.6952518219848394`*^9}, {3.6952518793945417`*^9, 3.695251967340351*^9}, {
   3.695252134446603*^9, 3.6952521346972704`*^9}, {3.6952523510306525`*^9, 
   3.695252486184388*^9}, {3.6952525180237055`*^9, 3.695252531646693*^9}, {
   3.6952525662572746`*^9, 3.695252670988432*^9}, {3.6952527349697456`*^9, 
   3.695252767842742*^9}, {3.6952528143518105`*^9, 3.6952528175833664`*^9}, {
   3.695252852246133*^9, 3.6952529099908977`*^9}, {3.69525296680324*^9, 
   3.6952529672103186`*^9}, {3.6952536100086117`*^9, 
   3.6952537489775767`*^9}, {3.695253786773588*^9, 3.6952538009691863`*^9}, {
   3.695253832365239*^9, 3.6952538901732445`*^9}, {3.69525392967179*^9, 
   3.695253929934487*^9}, 3.6953120148008256`*^9, 3.6953121608539734`*^9, {
   3.6953800494148035`*^9, 3.695380080025985*^9}, {3.6953846429099693`*^9, 
   3.6953846822046175`*^9}, {3.6953848254391594`*^9, 3.6953848280415173`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polyBoat", "[", "1", "]"}]], "Input",
 CellChangeTimes->{
  3.6952513374059305`*^9, {3.6952538230265374`*^9, 3.6952538247591205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"0.9999999999999994`", "\[VeryThinSpace]", "-", 
    RowBox[{"8.426000324584084`*^-16", " ", "y"}], "-", 
    RowBox[{"1.4166666666666656`", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"1.4253526569865085`*^-16", " ", 
     SuperscriptBox["y", "3"]}], "+", 
    RowBox[{"0.4166666666666663`", " ", 
     SuperscriptBox["y", "4"]}]}], "\[LessEqual]", "z", "\[LessEqual]", "2"}],
   "&&", 
  RowBox[{
   RowBox[{"-", "2"}], "\[LessEqual]", "x", "\[LessEqual]", "2"}]}]], "Output",
 CellChangeTimes->{3.6952513374520836`*^9, 3.6952538269579268`*^9, 
  3.6952538574746866`*^9, 3.6953120215265627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{"expBoat", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.999"}], ",", "1.9999"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "1.5", ",", "2", ",", "2.5", ",", "3"}], "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.695250591421285*^9, {3.695250680573187*^9, 3.6952507016157455`*^9}, {
   3.6952511240513153`*^9, 3.6952511460205235`*^9}, {3.69525123367325*^9, 
   3.695251241042699*^9}, {3.695251313515417*^9, 3.695251355844964*^9}, {
   3.695251430576348*^9, 3.695251448368596*^9}, {3.6952515645789366`*^9, 
   3.6952515829945903`*^9}, {3.6952516529570055`*^9, 
   3.6952516612684183`*^9}, {3.6952518124314365`*^9, 3.6952518132897243`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {0.4, 1.5, 2, 2.5, 3}}}, Typeset`size$$ = {
    750., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$714$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0.4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$714$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> RegionPlot3D[
        $CellContext`expBoat[$CellContext`n$$], {$CellContext`y, -2, 
         2}, {$CellContext`z, 0, 2}, {$CellContext`x, -1.999, 1.9999}, Axes -> 
        True, AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`n$$, {0.4, 1.5, 2, 2.5, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{801., {49., 56.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6952507023868227`*^9, 3.6952507066517296`*^9}, {
   3.69525074601946*^9, 3.695250761899802*^9}, 3.695250838310381*^9, 
   3.6952508845380077`*^9, {3.695251124431302*^9, 3.695251146406477*^9}, {
   3.695251236798394*^9, 3.6952512422107077`*^9}, {3.695251318654854*^9, 
   3.6952513561707697`*^9}, {3.695251431459534*^9, 3.6952514485420046`*^9}, {
   3.6952515659037523`*^9, 3.6952515833962336`*^9}, {3.6952516561727858`*^9, 
   3.695251661420812*^9}, 3.6952518573458624`*^9, 3.69525422861275*^9, 
   3.6953120227956624`*^9, 3.6953781849796543`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"expBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,23,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034402009287`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"expBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,24,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034402967005`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"expBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,25,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034403343005`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,26,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034403724065`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{"powBoat", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "1", ",", "1.5", ",", "2", ",", "2.5", ",", "3"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6952518315603275`*^9, 3.695251833217743*^9}, {
  3.6952519911406384`*^9, 3.695251991414364*^9}, {3.69525207004243*^9, 
  3.695252083661654*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {0.4, 1, 1.5, 2, 2.5, 3}}}, Typeset`size$$ = {
    687., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$751$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0.4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$751$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> RegionPlot3D[
        $CellContext`powBoat[$CellContext`n$$], {$CellContext`y, -2, 
         2}, {$CellContext`z, 0, 2}, {$CellContext`x, -2, 2}, Axes -> True, 
        AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`n$$, {0.4, 1, 1.5, 2, 2.5, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{738., {53., 60.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.695251833576661*^9, 3.695251992134303*^9, {3.69525207375834*^9, 
   3.695252083854189*^9}, 3.6953120249363813`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,5,29078627084537737810,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953781766866217`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,6,29078627084537737810,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378176738762*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,7,29078627084537737810,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378176772854*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,8,29078627084537737810,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953781768069487`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,27,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034404947367`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,28,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034405578938`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,29,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034405939884`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,30,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034406742177`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,36,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695403441383208*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,37,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034414343443`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"powBoat\\\", \\\"[\\\", \\\"0.4`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,38,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034414684353`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,39,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695403441502528*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{"cubicBoat", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.99"}], ",", "1.99"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "1", ",", "1.5", ",", "2", ",", "2.5", ",", "3"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695252440381179*^9, 3.6952524420015073`*^9}, {
  3.6952526092350073`*^9, 3.695252635246842*^9}, {3.695252924506321*^9, 
  3.6952529246256237`*^9}, {3.695252977945733*^9, 3.695252979066746*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {0.2, 1, 1.5, 2, 2.5, 3}}}, Typeset`size$$ = {
    743., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$869$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$869$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> RegionPlot3D[
        $CellContext`cubicBoat[$CellContext`n$$], {$CellContext`y, -2, 
         2}, {$CellContext`z, 0, 2}, {$CellContext`x, -1.99, 1.99}, Axes -> 
        True, AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`n$$, {0.2, 1, 1.5, 2, 2.5, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{794., {53., 60.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6952524429389477`*^9, 3.6952524561158066`*^9}, 
   3.6952525357545524`*^9, {3.6952526041645975`*^9, 3.695252635480459*^9}, {
   3.69525282135437*^9, 3.695252844226864*^9}, 3.6952529249735465`*^9, {
   3.69525298032903*^9, 3.695252986063205*^9}, 3.6953120267793117`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,9,29078627084537737810,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378176938059*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,10,29078627084537737810,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378177003023*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,11,29078627084537737810,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378177037111*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,12,29078627084537737810,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953781770712028`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,5,29078670607252494712,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695384822604286*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,6,29078670607252494712,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953848226389165`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,7,29078670607252494712,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953848226790214`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,8,29078670607252494712,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695384822717123*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,32,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034409449353`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,33,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695403441033789*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"cubicBoat\\\", \\\"[\\\", \\\"0.2`\\\", \
\\\"]\\\"}]\\) must be a Boolean function.\"",2,1,34,29078792504292561482,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034410703783`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,35,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695403441111989*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{"polyBoat", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.99"}], ",", "1.99"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "1", ",", "1.5", ",", "2", ",", "2.5", ",", "3"}], 
      "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6952537615698924`*^9, 3.695253762666794*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {0.2, 1, 1.5, 2, 2.5, 3}}}, Typeset`size$$ = {
    736., {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$304$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$304$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> RegionPlot3D[
        $CellContext`polyBoat[$CellContext`n$$], {$CellContext`y, -2, 
         2}, {$CellContext`z, 0, 2}, {$CellContext`x, -1.99, 1.99}, Axes -> 
        True, AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`n$$, {0.2, 1, 1.5, 2, 2.5, 3}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{787., {53., 60.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.695253762992656*^9, 3.6952538088901153`*^9, 
  3.6952538616016054`*^9, 3.6953120283426757`*^9, 3.695312304408864*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,13,29078627084537737810,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378177199554*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,14,29078627084537737810,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953781772436695`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,15,29078627084537737810,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695378177279767*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,16,29078627084537737810,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953781773138933`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,1,29078670607252494712,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953848222929215`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,2,29078670607252494712,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953848223610697`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,3,29078670607252494712,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953848224081945`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,4,29078670607252494712,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695384822466386*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,1,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953864111977663`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,2,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953864112544165`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,3,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953864113020434`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,4,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695386411358856*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,40,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034416017895`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,41,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6954034416907587`*^9}],

Cell[BoxData[
 TemplateBox[{
  "RegionPlot3D","boolf",
   "\"\\!\\(\\*RowBox[{\\\"polyBoat\\\", \\\"[\\\", \\\"1\\\", \\\"]\\\"}]\\) \
must be a Boolean function.\"",2,1,42,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695403441725848*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"RegionPlot3D\\\", \
\\\"::\\\", \\\"boolf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,1,43,29078792504292561482,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.69540344176395*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculation of COM/COB of 3D Boats", "Subsection",
 CellChangeTimes->{{3.695252297870031*^9, 3.6952523102104015`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mass", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"1", "/", "4"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{"expBoat", "[", "n", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mass2D", "[", 
    RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"expBoat2D", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"comX", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"x", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"expBoat", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"mass", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"comY", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"y", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"expBoat", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"mass", "[", "n", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"comZ", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"z", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"expBoat", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"mass", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"comY2D", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"y", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"expBoat2D", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"mass2D", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"comZ2D", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"z", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"expBoat2D", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"mass2D", "[", "n", "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.69525231180865*^9, 3.6952523118146687`*^9}, {
  3.6952539828594913`*^9, 3.6952540049058437`*^9}, {3.69525413883917*^9, 
  3.695254140102503*^9}, {3.6952548587390623`*^9, 3.695254866048534*^9}, {
  3.6952549618048897`*^9, 3.695254971084528*^9}, {3.6952550067403364`*^9, 
  3.6952550317398405`*^9}, {3.6953120455933857`*^9, 3.6953120704531317`*^9}, {
  3.6953123708733735`*^9, 3.6953123810543237`*^9}, {3.695385550321929*^9, 
  3.6953855660704775`*^9}, {3.695385621696494*^9, 3.695385693765132*^9}, {
  3.69538579605009*^9, 3.6953858330186567`*^9}, {3.6953887518181314`*^9, 
  3.6953887544209137`*^9}, {3.6953888354192104`*^9, 3.6953888375607123`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"water", "[", 
   RowBox[{"theta_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"theta", "\[Equal]", 
     RowBox[{"\[Pi]", "/", "2"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "\[LessEqual]", "y", "\[LessEqual]", "0"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "z", "\[LessEqual]", "2"}]}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"theta", "<", 
       RowBox[{"\[Pi]", "/", "2"}]}], ",", 
      RowBox[{"z", "\[LessEqual]", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", 
          RowBox[{"-", "theta"}], "]"}], "*", "y"}], "+", "b"}]}], ",", 
      RowBox[{"z", "\[GreaterEqual]", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", 
          RowBox[{"-", "theta"}], "]"}], "*", "y"}], "+", "b"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"submergedRegion", "[", 
   RowBox[{"n_", ",", "theta_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"expBoat", "[", "n", "]"}], " ", "&&", " ", 
   RowBox[{"water", "[", 
    RowBox[{"theta", ",", "b"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"submerged2D", "[", 
   RowBox[{"n_", ",", "theta_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"expBoat2D", "[", "n", "]"}], "&&", 
   RowBox[{"water", "[", 
    RowBox[{"theta", ",", "b"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massOfWater", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}], ",", 
    RowBox[{"b_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{"submergedRegion", "[", 
        RowBox[{"n", ",", "theta", ",", "b"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massOfWater2D", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}], ",", 
    RowBox[{"b_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{"submerged2D", "[", 
        RowBox[{"n", ",", "theta", ",", "b"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findB", "[", 
   RowBox[{"n_", ",", "theta_"}], "]"}], " ", ":=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mass", "[", "n", "]"}], "-", 
      RowBox[{"massOfWater", "[", 
       RowBox[{"n", ",", "theta", ",", "b"}], "]"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", ".5"}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "3"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findB2D", "[", 
   RowBox[{"n_", ",", "theta_"}], "]"}], " ", ":=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mass2D", "[", "n", "]"}], "-", 
      RowBox[{"massOfWater2D", "[", 
       RowBox[{"n", ",", "theta", ",", "b"}], "]"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", ".5"}], "}"}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "3"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.695254077924972*^9, 3.695254084055235*^9}, {
  3.695254131168871*^9, 3.695254132296877*^9}, {3.6952550613083754`*^9, 
  3.6952550787436085`*^9}, {3.695312584833995*^9, 3.6953125858144474`*^9}, {
  3.6953135800023775`*^9, 3.6953135970678673`*^9}, {3.6953136361990128`*^9, 
  3.6953136392769756`*^9}, {3.695313910279272*^9, 3.695313917472445*^9}, {
  3.695313993520039*^9, 3.6953139936664057`*^9}, {3.6953800879850826`*^9, 
  3.695380106003518*^9}, {3.6953858530509405`*^9, 3.6953858863992577`*^9}, {
  3.6953860659030676`*^9, 3.695386103041967*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cobX", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"submergedRegion", "[", 
         RowBox[{"n", ",", "theta", ",", 
          RowBox[{"b", "/.", 
           RowBox[{"findB", "[", 
            RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"massOfWater", "[", 
    RowBox[{"n", ",", "theta", ",", 
     RowBox[{"b", "/.", 
      RowBox[{"findB", "[", 
       RowBox[{"n", ",", "theta"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cobY", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"submergedRegion", "[", 
         RowBox[{"n", ",", "theta", ",", 
          RowBox[{"b", "/.", 
           RowBox[{"findB", "[", 
            RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"massOfWater", "[", 
    RowBox[{"n", ",", "theta", ",", 
     RowBox[{"b", "/.", 
      RowBox[{"findB", "[", 
       RowBox[{"n", ",", "theta"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cobZ", "[", 
    RowBox[{
     RowBox[{"n_", "?", "NumberQ"}], ",", 
     RowBox[{"theta_", "?", "NumberQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{"z", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
       RowBox[{"ImplicitRegion", "[", 
        RowBox[{
         RowBox[{"submergedRegion", "[", 
          RowBox[{"n", ",", "theta", ",", 
           RowBox[{"b", "/.", 
            RowBox[{"findB", "[", 
             RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
    RowBox[{"massOfWater", "[", 
     RowBox[{"n", ",", "theta", ",", 
      RowBox[{"b", "/.", 
       RowBox[{"findB", "[", 
        RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cobY2D", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"submerged2D", "[", 
         RowBox[{"n", ",", "theta", ",", 
          RowBox[{"b", "/.", 
           RowBox[{"findB2D", "[", 
            RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"massOfWater2D", "[", 
    RowBox[{"n", ",", "theta", ",", 
     RowBox[{"b", "/.", 
      RowBox[{"findB2D", "[", 
       RowBox[{"n", ",", "theta"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cobZ2D", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"submerged2D", "[", 
         RowBox[{"n", ",", "theta", ",", 
          RowBox[{"b", "/.", 
           RowBox[{"findB2D", "[", 
            RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"massOfWater2D", "[", 
    RowBox[{"n", ",", "theta", ",", 
     RowBox[{"b", "/.", 
      RowBox[{"findB2D", "[", 
       RowBox[{"n", ",", "theta"}], "]"}]}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6953146123626566`*^9, 3.695314661322694*^9}, {
  3.6953147882457*^9, 3.695314806541991*^9}, {3.695386115057947*^9, 
  3.695386166115568*^9}, {3.695386701383195*^9, 3.6953867017208133`*^9}, {
  3.695388123644004*^9, 3.695388149245262*^9}, {3.6953881858570976`*^9, 
  3.6953882125245895`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comZ", "[", ".5", "]"}]], "Input",
 CellChangeTimes->{{3.695391166676855*^9, 3.6953911733251743`*^9}, {
  3.695391234646155*^9, 3.6953912350997515`*^9}}],

Cell[BoxData["0.7870240357552196`"], "Output",
 CellChangeTimes->{3.6953911785513887`*^9, 3.6953912385923414`*^9, 
  3.6954034619727025`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"submerged2D", "[", 
    RowBox[{".4", ",", 
     RowBox[{"N", "[", 
      RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", 
     RowBox[{"b", "/.", 
      RowBox[{"findB2D", "[", 
       RowBox[{".4", ",", 
        RowBox[{"N", "[", 
         RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RegionPlot", "[", 
  RowBox[{"test", ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"test2", "=", 
  RowBox[{"massOfWater2D", "[", 
   RowBox[{".4", ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", 
    RowBox[{"b", "/.", 
     RowBox[{"findB2D", "[", 
      RowBox[{".4", ",", 
       RowBox[{"N", "[", 
        RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{"y", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{"test", ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
  "test2"}]}], "Input",
 CellChangeTimes->{{3.6953882616553535`*^9, 3.695388443423336*^9}, {
  3.6953884907281237`*^9, 3.695388548115037*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
ypuD8D8qkRcF
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBuwFE/iFib1JiAgAAAI4AAAADAAAADAsCDQoEIAsDMiYlGBQKGhIKDwoD
KyIRPzk2RT0pNgsBFhMLQUAwHBUQFw0EHhUHChIDOy8pChQEGQwCCxMDDBYL
LxcEQiolKBwQHx0IDRoKExsDFR4QEiEDIyIHISADCyABPDAODxgKICQBQyYG
NScIREM8QCIFLScQPi4pFSMHJygQQikEGw8DFCoEIisHKjIlMzAFMTAGNzgJ
QTERPzcJMDMONzYBCzYCMzQOOjkJLj4OLjspPTwOMDwGNjkCPj0OPT4pRD0l
OT8JNz82JywIMEAFQEERQ0QlPEMGJkMlRUIltGgSPUUlQkUpKS8EPUQ8IkAR
KkIEX4omVYkkr2kTn1QJMUEwsWsUZak4tW0Vl5MrY3wdZ7QSslcMbLUVU58J
e2MdTFIIhIMfqqw5SbEUWrANgoEeWLIMfIAdR68Tp2E1naYxTmQBbpgss1wP
YKQ0o6Eznp0xUaIFcXAXf3UZpXIRq3QCXbMPek0Hk5UrrWY6kXcGiZokdH4C
m2ouRk4BlHoHd0sGmW8teXgcdVYZsEgNi0oFj3MQSlEFipImgZAeh4wicpYR
a2tj8Q==
         "]], 
        PolygonBox[{{105, 89, 27, 19}, {97, 141, 39, 53}, {102, 170, 57, 
         58}, {77, 130, 30, 7}, {128, 76, 8, 29}, {91, 155, 46, 14}, {111, 
         142, 39, 45}, {144, 143, 16, 30}, {104, 134, 33, 18}, {125, 132, 31, 
         8}, {82, 167, 53, 8}, {126, 127, 25, 2}, {115, 153, 45, 16}, {98, 
         121, 28, 40}, {136, 135, 34, 35}, {92, 80, 24, 15}, {72, 118, 26, 
         13}, {140, 139, 5, 34}, {131, 123, 29, 31}, {166, 165, 17, 49}, {75, 
         158, 49, 6}, {106, 174, 59, 46}, {172, 171, 2, 57}, {169, 83, 9, 
         56}, {107, 94, 42, 20}, {94, 160, 50, 42}, {141, 98, 40, 39}, {146, 
         145, 6, 38}, {150, 151, 43, 17}, {134, 133, 32, 33}, {152, 125, 8, 
         44}, {174, 156, 47, 59}, {149, 148, 7, 43}, {160, 95, 38, 50}, {112, 
         90, 13, 23}, {84, 173, 58, 9}, {162, 163, 51, 5}, {156, 113, 23, 
         47}, {80, 73, 20, 24}, {120, 108, 21, 28}, {87, 79, 22, 12}, {100, 
         168, 55, 1}, {118, 103, 18, 26}, {161, 96, 52, 51}, {79, 71, 19, 
         22}, {142, 110, 44, 39}, {164, 91, 14, 52}, {168, 101, 56, 55}, {154,
          70, 1, 36}, {109, 136, 35, 21}, {89, 93, 15, 27}, {86, 88, 12, 
         25}, {133, 85, 36, 32}}]}]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[{180, 104, 134, 133, 85, 137, 154, 70, 78, 100, 168, 101, 169, 
      83, 159, 84, 173, 102, 170, 172, 171, 116, 126, 127, 117, 86, 88, 178, 
      87, 79, 71, 175, 105, 89, 93, 179, 92, 80, 73, 177, 107, 94, 160, 95, 
      138, 146, 145, 119, 75, 158, 157, 166, 165, 114, 150, 151, 147, 149, 
      148, 122, 77, 130, 129, 144, 143, 115, 153, 111, 142, 110, 152, 125, 
      132, 131, 123, 99, 124, 128, 76, 82, 167, 97, 141, 98, 121, 120, 108, 
      181, 109, 136, 135, 140, 139, 74, 81, 162, 163, 161, 96, 164, 91, 155, 
      106, 174, 156, 113, 112, 90, 176, 72, 118, 103, 180}]}}],
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-2, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6953884589352016`*^9, {3.695388509185508*^9, 3.69538855377759*^9}}],

Cell[BoxData["0.14776749832855768`"], "Output",
 CellChangeTimes->{
  3.6953884589352016`*^9, {3.695388509185508*^9, 3.6953885594065557`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.268292339469801`"}]], "Output",
 CellChangeTimes->{
  3.6953884589352016`*^9, {3.695388509185508*^9, 3.6953885598886414`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findB2D", "[", 
  RowBox[{".4", ",", 
   RowBox[{"D", "[", 
    RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6953864110221586`*^9, 3.695386418925064*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", "\[Rule]", "0.5588983900833933`"}], "}"}]], "Output",
 CellChangeTimes->{3.695386425855678*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mass2D", "[", "1", "]"}], "/", 
  RowBox[{"massOfWater2D", "[", 
   RowBox[{"1", ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", 
    RowBox[{"b", "/.", 
     RowBox[{"findB2D", "[", 
      RowBox[{"1", ",", 
       RowBox[{"D", "[", 
        RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6953864612123938`*^9, 3.695386578721091*^9}}],

Cell[BoxData["1.0000000000447185`"], "Output",
 CellChangeTimes->{{3.6953864937636566`*^9, 3.6953865844136214`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"curB", "=", 
  RowBox[{"b", "/.", 
   RowBox[{"findB2D", "[", 
    RowBox[{".4", ",", 
     RowBox[{"D", "[", 
      RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"water", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", "curB"}], "]"}], ",", 
     RowBox[{"expBoat2D", "[", ".4", "]"}], ",", 
     RowBox[{"submerged2D", "[", 
      RowBox[{".4", ",", 
       RowBox[{"D", "[", 
        RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", "curB"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6952549055783424`*^9, 3.6952549166918945`*^9}, {
  3.6953123321939735`*^9, 3.695312333112029*^9}, {3.695386248537152*^9, 
  3.6953862506226315`*^9}, {3.6953863080560226`*^9, 3.695386393028796*^9}, {
  3.695386430847516*^9, 3.695386441372106*^9}}],

Cell[BoxData["0.5588983900833933`"], "Output",
 CellChangeTimes->{
  3.6952549191875296`*^9, 3.695254951280867*^9, {3.695255041141825*^9, 
   3.695255054579505*^9}, 3.69525508849949*^9, 3.6953120410583205`*^9, 
   3.695312095463767*^9, 3.695312335291626*^9, {3.695313787655109*^9, 
   3.6953137962941103`*^9}, 3.6953863970490074`*^9, {3.69538643798011*^9, 
   3.6953864470157366`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJy1mndY1MfWx9GoMSj2WBajMUFdxYLiYkT0aFaxxLJgjWVNLMS4VvSq61VR
ohg1GqNrjW0teAVkbbHg4qBYsREirGCh7dKlLEhT4a77y3fW58ebh/d9kpd/
eD7Mb2bOmTlzygztpi/wnlXTzs7O8QM7u3e/U8NX3q6srGR1g4MbaAeu7P+j
z9NXodo3nLs2dHdSyss4x1zc4+1gesV52Tcla/QBZs5fNAlRGhS5nP1nfH9F
pknnfP98h5YaQxJn5/p3Mo2yx5xLw+y3BJjDOOsFJnBr4XvON4TxOK8Q5uPs
IsjDGfreuOfk9aNlXOgLhr5g6AuGvmDoC4a+YOgLhr5g6AuGvmDoC4a+YOgL
hn6jIlss2GCO4vqBoR8Y+oGhHxj6gaEfGPqBoR8Y+oGhHxj6gaEfGPpM3fZw
ksnyHfQBQx8w9AFDHzD0AUMfMPQBQx8w9AFDHzD0AUP+ptS4IsCcwOUHQ34w
5AdDfjDkB0N+MOQHQ34w5AdDfjDkNRWfVLzbB8gLhrxgyAuGvGDIC4a8YMgL
hrxgyAuGfANGffWZSWbk8oEhHxjygSEfGPKBIR8Y8oEhHxjy/Ho8p/DdOYQ8
YMgDhjxgyAOGPGDIA4Y8YMgDhjzFb7bcDDBncXnAkAcMecCQBwx5wJAHDHnA
mN9rbPfd7/wu5gdjfjDmB2N+MOYHY34w5osbN7uXxpDP5wNjPjDmA2M+MOYD
Y/x1NfocsHzHxwdjfDDGB2N8MMbreeqjOiZZER8PjPHAGA+M/kkTE+Zb/s77
g9EfjO+31go2yDQl/Hsw2j1O/3uApR9vB6M9a/KIkwHmcoq1nscs0j3r//Em
cxC1tdqfkfY0i71nkt2gGGt7AtXs03WjxhBN96wcRZfSF3Rx0xi4fwTbWX+u
6ufvOvvIoHjB/RE4U+jPth9ZcVkfkML9AThFmI8N9QqfopRnUkdBHnbsP8pu
Om0OPRfkZRWV737yKMpqr/nsVHD0bKmugO832Mnav4hNnqD9XaEs5PsHXmO1
vxL20Qe+7mqHV3x/wAnW+crZxdAvj2r1xXw/wGifNalp/ShVKblZ569gTesY
l5gl5Xz9ED+wfvDPWC/4Q6wP/BH0g71BH9gP5Id9QB7YwzVr/2jy2TFgp1Ie
Twet7UFkSZ5a29klUU/reDfY96UpLxXKVEqz2kce2xNX6wezxEyjLkz7zbJO
zNM/NlsSVUgnHWpssOjNiroGjpWrX1GtWUcmWvRkR+KXhqukJbTMKo+B7D0O
RTqYYqmZMD5FZCX76LTPqPkV6/xMP6LJeqkumQ7b/zzCsk9sYZd5FwPMZnr9
rUsby7qzNk/6farTFtH4y7/n3VWVsvs/NNhoUBTb/EPAmkiF8jW3X56fWu09
h9ZV+B7YYt7H7Sm3zHGzg8nE/Ss4Wlgf1uLYufFqBxvfGL2OafVpfH7sN/Rd
0T2xoLLSdt6w3/VnN9uhklayCpeWP+sDyvl5Ep8vnk9a7c1E/cJdyzWGCG4v
4vPH8z2rfb2gk5LLA54oHnL9EC8ChPVnvq/HSqNUGfz8iM8T/PsK63lIYQ+8
i8skUdn8fInPG/yzi9X+M5k0aPc9lTSP27vY/uFvpunlneXqt0z6VDdJqivj
+S3WQyqMRw0+STmVJjvP80Xo7yvIR4WqpQfcNLd5fII+/YT1YG1PtP/FLLHF
M8j/WFhftqLi1nS5+iU/T/Af8BfgTYL9sKzOvSRRKlv8gX5nGi2+Jol6zRTr
h3TQGEq5/LA32CMY9cqkHwaf1fj+SCEtEg8rynOr1DfTR22dFd78Gtf/6aEw
T0fvaJJ+Tu2UhTb/UeweI5P+/JD7j4VX9xxTvAgh+A8f9/Pbta0jquQ3+Y1P
Fcou2fINz4eB/TS/ZvP1un01zEvpl0eNAh06qPfa/M2KjkdPqNYVcn8TtqTN
NPP8Yu5vnIrPJRm/LqsSj7a3qbnUvLyMzmwfTvJffielf4zU7XA8fdP28TlF
//PksqV5oWJuEtWs779TdSecdY+P/D2grpHC1sf9onqWx47MnL/N8LmZth9f
s0XboJAdtb/pZy4opGF1m3s7dC9mx047LnCIeEUVc4Kbq0eXsWPjfZXSrSXk
d8q5hq5PGrefiiay7dqZSTx+OU781x1JjIGmuLUfblcrjsevxDUp83WtnpD3
p83aqD+J5fHsx30013D4Fikf+n041+M5j2eJ39rvlicn0lDZyu7K1Os8vg2K
nxwpa7aDdXOdl6Jyt8W3he32Jqoep1J6zPIeykgtj3fdIk6dl828xwbv7Rho
iDPRH22GhSl2RbNBWfUzFCFpdKn905jKn+O5vU/tOnOiw4EUbt+uLj9PNvtm
VLHnoxPSe2rOFNC5qPVRlUNs8bBPkSxYtbqAHbvYqq7J3hYPTaMLPNRHC+mG
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
/2/vG8T3C9XdF4jrfXF9Xl29XN37c3X1s/g9Wlw/i+sncf1a3XuuuH4Vv8eK
60nx+6y43hLXm+L3VXF9Ka4nxfkw1hvt1dWT/9f68a/eX3Heq6vfxPWNuF4Q
vweiv/i+HuNjP8X1DParuvdVzA99qqtvsb6Y/5+uR3tZ9zeedVH7eei0xir1
GRjy4Puaj9IXytWmKvWguF7EeoCxn1g//v+Qf873xLr+sSzeSXHcoLAx5vMR
4gX7q/dMcX0lft/sKcSDKv4kbV2HGo6X0qvUU/x+b3JXF92v2VXqq+reJ//p
+uvvvi9WV5/93fdHcb0G+0W+X1199k/XP+L3O9jj188mXtBb6hnxe1519cxZ
TU7R3f/hPe+XMb3dNVteVls/VPd+Jq4vxPmpuN4Qv49VV0+I38/E7yPiekL8
vlZdviauH8TvMeEBgW/udkyuEj9ivho4SO2XRz7jLsrkb9N4PPm79Yc4/xe/
v1WXz4vzc/F7i++QRf3k772vI56tNF46odfkVPveJn7Pcfjp4jLte+/J8Kfu
OaEHDEds78vtV7nUswvKpKP2nxWHqp9ViV9Xnl0/ow2w1Hd1PVbrm9jiF+Ir
9uv3AucHlbefcX+88/C8LQHv3UeJ39faLXTeoD0WV+U+EPXWVUNsLc1t23un
uJ7i+dqf+bunkL9XiX/I37cURNTVvPf/DIhHrwuP7TCftsRTIX/n+v1/1yv1
s/dk37Xkz7LrJ4ZrLPmv+H1SnG+L3yurey8U59vi/Pq/lswI4w==
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlnmUl2MUx58nQqFlitK0Tds0U2lapmWaptE+zZCmbUrRpmhoKkupZKIk
oTClBaEkO2UnFEVpD5V9d/zJ4XA4lvt1P7/z9sf33Ge7y3Pvfb7vmzGponRG
tRBCVQzhFJN1DTYMWjvHUN1wmiGNNZ2phzzVcC77pxvqsyadBqydYWhsOMtw
tuE8Qw1DTUO64Uz2OhiaGZobGqKncx8YXjPUYr8OMTZHKq4WxCT/LZGKvRVS
MbZGKq4M9KTThjX5bEt8jQyZrKXmNYk1i7lib29oSlz7Ddu56+2GZYYLDOcT
q3zmEKti7IRUjJ2RirELUnF1RSqW3uhLL5c1xdvD0I5YnjTcYSg2FHBWtvMN
HdHvhp7u0Yd9+bzQ0NfQz1CEvwLu0BWftxmWYkPnuuO/P7KnYQAyzzAQ2csw
CKlYBiN7E1cGeRmCzz7cQbIQdCGOi/AtnzWoj+p0g+Eaw7WG4fjQPS4mJsUy
DKlYRrAvn6WsDSZ/y/E/Fn3pjSZH8j/GMJS9csMkw2TDKEMJ5y5BT7bHIRXX
NsNW/E9AR7YnIsuwV4afyUjFcplhJDpTWJOfaYZL2T9o2InPMuJVrFewL5/T
8Sc/V7Km+WHDLmzPMEzFdgVSNmYipTcLKXsfGo6SD9Xgamxch5SN65GyMQcp
G3cbVhpmG+413MP+PGzJxnykbNxomEvN1WvqffHHQtakJ07Se9f7rzQsQO8+
w2rOfmx4n31xnvhE/CKeS2Oe4jvNxW31mVfHdn3yq35Un4nzGuBbHNaQ+SpD
FffYZHggeJ/lEbt4ohdSb0KcJy4RZ6pP1S/qn33BOXExsYp7xEF6B3rXmSHh
x2bEqreVERIebMVZveNc4mvDXhpnpS+ey+LsdsbivRR/5eCjAzVoTvyaDybe
UuLTfjtsd+TcgeC8uYQYc9hL8WDnkHB6i5BwYpeQ8GYn7pzLXqpX5oXkG9CS
OmRiQ3rilgL85ZP7FJf1w672e4eEj4bgu5C1FN/1P6l+qmd3bPQlF3mczcFe
fkj4cQB56YGe5uKVoZwtIpcF+C8ilz3RSfGp+GsZcRbiWzxUQiwXMU/xoHzc
GrwHskLC0QO5z1B0BlFD6ahfRxCH3pneUOotSi7Ah3hsFPplzGVvDHP5Hss8
xXGT8HEJe+JIcdjwkPDjhJDwzsyQcOXEkPBsSn8Kdncy1rq4rZx1caF4bNpJ
djXXv4jenfr8Uvan4mM65w4F59k78V/Ons6J68R9I/GRslHB3pHgPHtXSPi0
gnxNQOcod5TNj4Jz64qQcOh1IeFQzcVnldQgxbnizZWcka1rqNlc9uYxr6KO
mh8LzolrgvPiIsNNwfl4Pr4W4Evr+icSR4h7SriD7r3RcH/wfnw9+PtWTt8M
3nNZ5Oha4jphOG54Lng/6h9D7/kRw3rmjwf//9C+ely9qD58Ivj/lv5TXjW8
YljLXP4Lg/+3pROr/Ig/9T/5NjVU3zS1D0CO4WbuWkVOngr+TVIeNxs2kI8t
hofJ/RzWlB99yx4l948ZHsLWKuZV2NuMztPszacOq0PyndrCfHfw+pdj+0Hs
ryaGSmxtwI5yvI5c6X9mE/majd4scraRHFURp/w/g++F2F6D/T3kdRF1eIS6
rCSeOeReNbgF3ZfR38A953P2Kc6vo67d8P8MftdTV9Xw+eB9UTv4N/OF4Bwk
iCPEDyc4t5iaan08chvjtcSn+NWb+lcuZv9Fzuibq35tjNS8SfBe0Vjf4jfY
a0Is24hF30f1dxZS82zDz4aMmLwBradjQ7aWcO+XyPtS7p3LeD3z5dx/BHfc
EZLeFceJ395hfDlS8ynUT+9Zb/Zd1i9nT5woPnwveJ9dFZybDrO/m70V6L3L
/m50dX4P9vV29D0/wN21vpfcK38fkDfJfYy3o5ONjT3UaC/jm7nLQWK+k/E4
5CHWdxHzVeR0P/leRr2LOaO4yzl7hPPqr+PUWfx3DL9rmFeiI16eTpwfc0Z9
d+IkGxqrD98K3gfZSM31LrdSv3Hk4Tjnd7A+Hj/i/NnIjxgXWR/Vjf5uBprs
G/29zUJHZ4bYWlr0vlmBvmIvsbX60XtomMnG0d/l34Ye0d9Ascl60fN1scn0
6O+11GST6G80z2Sv6P36i6FF9HuVmTw1OredaTIzet3PNpkVvdZdTXaJnrNc
k92i57ijyWrRubOnyZrR38Jok5H1MSZPj86V79CD6s8vyIty8iX31931Q98m
eg6+4m661/fcTff6kbvpXl+To//fmMlfg/PcSBv/HpwvR9n4z+Cc2tbGnwTn
pQY27hC9l3TvAdz9HJPto/enOKAOPNDcZK3odT/P5PnRa/cDtVFdlLPPguet
lY3Pjd77tU1mR++rfw2to+dCa5/Tb/+go/PKQSPyoLMNOd8yeu6Ut3Y2/obe
0z+0+KbQ0M/WO0Xnc30bf6LnVavR1OVTcqE8FEa3NZ6euoC+Um6+C56fzjY+
y/CsjQui50J5UC/3p5//ItfK8x/UQPlXvzSjZ86I3hPqB+X42+B5/o36qXbV
o/elelJ914feyzfZO/r36T9kbN84
         "]], PolygonBox[CompressedData["
1:eJwtk9mLz2EUxs+xLzEYO0O4mwsykewj6w2KO2Mp5W6aKX+CLcmSJDuDYTAz
JtlSalJKSdM0pSkRYx3L2Pf9c3rOxafznN7v733Pec75jVlbuayik5mVQheY
6WaTYT/6KryCh3AITkAvzt4Tz8A+GE6+Gu6id8Fo9BpoNd3xGBaT3yCuijfQ
b4mnYQ90J39HrIG94OQdxFOwG17DIzgMJ+EeTOKbC8QCWIkeBOvQzdAOM1y1
Hzfd/QKq8o2BnP0mXoIj8Dl7jN62whzOS121Xjb12p53Rc9R+3M4lj38hDdQ
DdtNtT+Do9lDnLXlW/HNAO7+SjyXnn7LHqO3bTCW83FwEL0F7sNC8uvEIuiJ
ngZX0OfhASwibyQWw3j0BJd36+EH/MraauEJLOH8psmzmM1f4g7TjJZ6DEGz
vJXf/iPuNP2mP/kn4llTjYWuN2pzRivI+7hqvQNl6AJXbU0wH70ArqEPxE6g
h0A5ugWWo3u7zm6bdmkUbDDtVPT6Mb1pTG8+EDebPOpG3sO1S/UwHT3Vtavh
WWd0V9fu1cE89FzYaKpppOuO+pzxYNeONadHsevDXN7Gzo9w3VmXM4/dmkJ+
MXesn8uDpqxxqKvnlvQ0vPySuxeexm58z12IHZnItyXQYKrxZXoU3oQnfV2e
h9ebYDZ6lkvHf+RpzjRmGR4XuXYodqcqa/2Tux41/wefmIzn
         "]]}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlnds11UUxfserrhX4h6YGLfGOOPWuBcR97YtlFFpsSxpSylURaGCIqCo
aKUoohYZWnG2lgoULRSpI+4VZ4x74D4n90PsHyf3/e73vfvOne/Xu6i8b1ku
KChYJ/QS3kgFBd1Cl/CqsFqoEuYKDUKhUCr0F0qEMUIRv+8VJgs1Qgu6wcIy
4RVhgDBKKBeGCiuF+UITvwex/wak73lZaBVqhUb2+PxaYY0wHq7WjRQqOHc9
/MytWJgo3C1UCjdyn+95CL+8b6pwkzCC3yX4ME24Be7ThQnYsL3bsDmWWPTj
/grsj0ZW9PBtKGesG8YdpXyfg59lxKwUHo7hOPwahI1yYl2Cj87XJHxtwr73
P4+usgcn83+Bb3XsreRbu9AsLBZmCvX4NpRzjsNr6Mz9dngUw6WGXHcIK4TH
hGeFJfhQx132/X5hCnm8g2/W30NMHc/XhQXsWUCOhpPvm8nXKHI0Eo4T0Nmf
W9HNg2sxHCfD80HiVoVP9eS/kvzahmuti7vWwrmMe6Zxl3ndCTfzmsr+cr6b
25P4OQxe0+Hme2Zwl/24i/0z2DeaeMyEo3vCPeZaWEQc18dwFnF8jriPg9cD
cGsjtw2s3QPX4fdsfF9K3hrZN5e4We8aHUgMHiYOj7Pf+m7O2e9HOVuInIcd
3/kI987mdxFoYE8jNu3jU3D2/oUp6mA4MV9AnO2na8w173puIs4+1wyHJei9
Z1WKGbQE+08L1Snq1v7U4t+cHj4+gf4ZbFbDZ1H6vz4Xsm7HbjU+LYaD+3pZ
Dw7O0ZAUvdKBfc9d97P786UUvVpHLJz3wdhux+4s9nlPZ4r+bMGOz1YhX2Tt
u1qxZ+k5615zT9yXoi9st42Yd7KvH7lqwyfHZim5aoZPNXmzfiD3rsaXAfjv
ObGcOAxALieHrfCrJTcrydkkYlJFLjq4Zz57hvB7BX6Vctf6GeizE4n3Kmy3
EKv+yE58rOOMZ8AYvlnv+eF3roY7V3FvK2dtz73r/h8JN/e867CvHtp9ctRs
keR7Kfp1c60vzDEvNpG8IEeejpY8MoeNcyV3zHFXH8mjWH8kfJuiF5q4z3ed
r+8b5JgBF0num4PTp8IhOXrvHMnzcsTjGMlNc8yJLSUvzTHXNs7B1Txt40d8
20Lri3P4erLkQTlie5rkGTlq4V3hQ2rgdOm2z1H/Z0r+laKHdtF61xz120vy
K2rgYK0/oZY8e/2/xPPX/eX3YAR6z+Iy1taPZ+8a9K7Lbtbm8jV8utB7Rk3B
znhsrMG+c/VDinztp/VPKWbzAVr/kmIufynskKNnvhN2yzFnD5T8NcVcd2x+
o/b+FE7NMWveEQpz9Nz+kj+neE+Ktf4nxTzuxh/zv1b6t1O8Az6XOPuNcFiO
2dRbco8cb9rf2KrHny5q8gTptsrx9nwhFOToNee/hBrYWXKnHO/K8TlqwvVw
XI7cO+/vU3+uvZOk2ybHf6LtJLfN8Ya7ZvtQq7a9GfbfFD5IMVsOle6zFG/F
4Tnqxjk6O8c369cJv6eYAddI91aKXvyYWnGd7C15RI6Z5DzsRS5OlNw6x1va
X3KjHDm/LEfcHfOrcuTM+XJsLic+nxP3sfD9A8729Wr8te0rsf8v/Mztkhx1
45pxTr5PkZdjc/S8+33DHJzMZ3fJPXPMN/fKWfSL/T4lh+9X5Kg/195/XVyY
dA==
         "]], PolygonBox[CompressedData["
1:eJwtk91PiHEUx5/fkTB3NTUvsxJuNVLeVSJJTUkhtlgbN7hxx4YNpRfvKVGt
Vl6mZTVlWWyu/AeocRGKUPRq8lKfs/O7+Ox8z+/Z8zy/8z3nRB8+kX1cgiBI
ghA4SHIALrkgqIQ96By4gL4Bk7CF/AmxAPah90IRugJ+wm8ohToYhLU8byWe
hK+wkvwR8Sh0Qzh5FbEQ+mAKyuEhzOfZTLiCvgsR6B7iZagGIS+EV+gjsBud
DefR12Ee+h+xDG7Dd5jF2VXiY5iD3gVd6BeQh86Fi+ibkI/eD8XoWzAEC8Tu
0gaxYnfWu96HT/5M9QP4ANvJnxJPQyh6OTQ5q+kXJIp5XQKRYjVpLXdgADLJ
nxHPeS+H/L/V03ewkLMaZzU59Bf/rno0DOs4u+bMk3gxD7T2FhiB9WJeaY9X
oF/73t7zvfpGbHbWs1Xkn4ln/dkb35Nq37MY9Ef/bj2Mwgax2VFPE9BrxP59
DMZgo5jXOkPjsElsltRz9WoZNDrzbC76B7HWWU3/YSlnDb7H2svZ8NxZT9/6
GdDen4EAXQAvfQ1/YSt5h7MehaDTodOZ54vEZkRnQz0OQ/f7b1X5f2vNWqve
IQu9GE45u0MaeofYLBxytjt/iO3OdmgCNovNlu7cEvR7Z7uiNUaRR4vtkn5z
NTpObHfUE61Fd0h3R2tKJd8m9i+tSXdjhtjs6I6koHv9LOodMsh3ivVCa05G
J4nNou7wNMLqh8U=
         "]]}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lFdvU0EQRs1eEF000Z/4S/wEXpKYkNipEBMSIKSCbUhik0Aw2HHihF4k
OkIgQPTeRYvoEqJI9PqN9vBwtHv3zs7OfDO7CxaVLyxzoVAoLgJxQx/zNYlp
jIplokTM0dpxjRWiVawXS8Q6sUGYkyExLDpESgyIxeKHeIq9+W0SNfhvFkWi
WqwQEREXq7Cx81cSwxqxmrOWihbWW/Bj80rRiJ8c8WTFDnGAs96JT+SRJe5S
8UF8E2tFWgySx2dxn3g+ij3k9VfcFp0iKQoiLL6KR/i0GLajyShpeE1jl3jv
vODtGr+Ln2hawD5BHEPs7Rb1+G8j9v96tjHfjKZFaFmHDo3oFaF+ZlMsLot5
gf83SL1SnJ8jhgh7S6hJDB3q0driacCv+VxOzaJoa/6qqGE1fraRT4K1COvN
7LN5XmTIaZPzfVZGjK3oX8BHmP9xYuvkuwabJBoOoWkpZ7Wj1TD/stTA/NeK
jdjb3lfii/O9W0nMYb5j6F9B/lH+12HTT80tVuudg8Rv2l9B37viDrr2iS2i
HNtxgbe3O7Sfs7aij9mM1/+xooe69XNWHl9m00MtzM8s2e4iD6t7mnzPign6
18v+buKfq7VT1Gq05kHg97xGlyby66fWGc4up34ZeqOL2ieIM4v9A/EcG7s3
e6nRE/HY+b4bES+dv/8p9prNPnGI3hjGbwex5PD/Vrxx/v24J36R7zNxHp8P
xTHneznNGeY/SR+Yz1vij/Pv3bTAx12MjxH8HBZjAp/7RTEl8LWcrfE6PXHC
+ffU+mWmxqvO35nTaG06T9U4PfDanXH+bbJenKG1S9T/JLW0Ou7El/nZzXl2
lr3lN53vUbvXBXI56vwbZHdgsmzOOX/PUvRKFWMv8z5qafclytxytzf1Ausv
0LEB+zx2dp8G0LwOTa2vJga+HrVodoSeMdtB1n87/z7avbS+m0Tv/QMZ3vAu

         "]], PolygonBox[CompressedData["
1:eJwt09lOFEEUxvGmm7Army/gQ/giPII3kAhOIquCbIIyBIiyxAECo/eAUYNB
UVQ2ibiwakgIhAiETRN2Igr8T+q7+KWqZrpP1fmm5ur1UNZN3/O8a4jFFxZp
gedFGZ9gHgdoRAveYgi3UIEdbOM+HujZOTTrnU2s4B5q8QMfkI+72MMubqAO
n7CvdzvxGZc5TxdjNpYwg1JU4x36UaYz+Tz7U7Xb8ArPcAfl+IPf2iuMCSyr
VhNWsabecjCAS4E7iwXVh0VUqofveI8q3MYCzpVVEV5iAzXIwzdlZlmV4Be2
lI3VX8cLzS2zIxyqVo32/qp3K5X9IOr1G1gWvTqLZTKrnsPKLI5exhgbEFHW
E+rdMp/GKB4qsxSeT0Yx88c4wTFyVeNK4DK3rJ/iFH/V6yP8w3/NrcaZerb+
7I48R2zgalvNKdW0Wq3KdgSFytjuwiRjt+/uhMe6R3fDMkhl/ZoxpGeSWH9k
LEAHElgnot13dy6e+bi+s88yWKcH7rePKgvLLKJM3iAzcP8N22PYd3esXGe0
vWICd3bb8wJJVICQ
         "]]}]}, {}, {}, {}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwt0ttTzGEcB+DdVqtVu61TKG2FhIiQY5QcCtvRqUJmXLiji266aKYx/hpX
uuxvCUmRQyU5RqHnHV088/m8h/ldfN9fxf3+rkfRSCTylBxCT5OhmuM0keUG
fTzgIQMMMsQwjxnlCc8o8LHD1HKeCzRxiYtUkc81Prh/SGa4RxnHqOMM9bx3
5zPr9JOc5hQJSuninfN51uo95BFnO51MO/vEGr2bXGKU0MFbZ3NhDvotcjhI
Ddvoo5jd0f/DaueNekBu4S5bqeSf/TY5JffLzdyhiF38td8qJ8OsZSPnOMGf
MHu5LDfJLK/1WX5z03pJ/mKjfpUJfYaf4a2sF+UPNuhXeKV/5BvXrb/Lr6zX
LzOu75Q7+KK3yJdynyzkNmkqWLDfLF/IvTJJLynKOUsDRzjKmHt75HNZyAgp
kuE/IT+8KwnywvsRJze8FbHV/3MFgjs/xw==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwl0mc7l2EYwOHHX2RkZKVlFmVHZCSrgQpR2ULjJd/FhzNbRFZlpFRW53F4
cR6/67qe++WTPT7ZPREWBMEUx4bXoSA40lSd1Vf6VZM0mTnzqAasmit0U8t1
Qz+xwG17JdfJI5K3RHCRS/zwrka/62c+kGO/ypY5Vt8RQy07bvnaTQ/nqGPX
/YY+5wVx3OWn+019SS/x1LPnXqB99JPAPX65F+oAgyTSwG/3Ih1imPM0su9e
rE0088f+l20y7dlkkcEzougimitc5r2343qWb+YqreYOnaTzhKc85gwdrHsb
rm8IcYE1tzAdY96cpjM6oie6Qpl5WW9pO22k8JBHPODQ91Zd0hJd1Pt6oC36
Tz8yTan9i+bqtdDpP/QfkTY/Ow==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwl0TVSBVEURdHHx909YkoMgQFAMS/c3d3d3d3dVxXBqt2nb9BBl5RVlJZH
hRAqmYmEUBQdwrRuUUOe3acrrBKxc5jzHKX9mqQjGq+JJNBq13HPA9fcsEix
+4LusMsYj4yS6tamDZxwwDj7nHPBIT8s8cQyv6zzzAunnNHIHh988s43X6yR
7HspRBNDvXfbvPLGHcPEuQ3pPPmea7WFAQrtQe1llly7WpvppsDu0S42OeaI
DTLdsshgys7WDo3Vdk3XSU3TCW2iimDfaieXXEX+/98f9+5LeQ==
       "]]}}}],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["y", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["z", HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{None, None}, {None, None}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-2, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6952549191875296`*^9, 3.695254951280867*^9, {3.695255041141825*^9, 
   3.695255054579505*^9}, 3.69525508849949*^9, 3.6953120410583205`*^9, 
   3.695312095463767*^9, 3.695312335291626*^9, {3.695313787655109*^9, 
   3.6953137962941103`*^9}, 3.6953863970490074`*^9, {3.69538643798011*^9, 
   3.6953864471240516`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"submergedRegion", "[", 
  RowBox[{"1", ",", 
   RowBox[{"\[Pi]", "/", "6"}], ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6953137342392883`*^9, 3.6953137806509237`*^9}, {
  3.6953138574017563`*^9, 3.6953138623378906`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Abs", "[", 
      FractionBox["y", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["x", "2"]}]], "]"}]], "+", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}]}]}], "\[LessEqual]", "z", 
   "\[LessEqual]", "1"}], "&&", 
  RowBox[{"z", "\[LessEqual]", 
   RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
    FractionBox["y", 
     SqrtBox["3"]]}]}]}]], "Output",
 CellChangeTimes->{{3.6953137484351225`*^9, 3.695313782691224*^9}, 
   3.695313862607805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massOfWater", "[", 
  RowBox[{"1", ",", "1", ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6953138660975986`*^9, 3.6953138716073856`*^9}, {
  3.6953139370794554`*^9, 3.695313940205139*^9}}],

Cell[BoxData["0.7562205690168364`"], "Output",
 CellChangeTimes->{{3.695313871858885*^9, 3.695313947399432*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findB", "[", 
  RowBox[{"1", ",", 
   RowBox[{"D", "[", 
    RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695312351270996*^9, 3.6953123554973087`*^9}, {
  3.6953123864912868`*^9, 3.69531241502567*^9}, {3.695312562008544*^9, 
  3.695312565806738*^9}, {3.6953139574741488`*^9, 3.695313960084654*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", "\[Rule]", "0.4852293576619731`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.695312390274561*^9, {3.6953125263613358`*^9, 3.6953125533003426`*^9}, 
   3.6953126147127366`*^9, 3.6953127852196856`*^9, 3.695313646253314*^9, 
   3.6953137467148514`*^9, 3.6953139961261797`*^9, 3.69531410222805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"submergedRegion", "[", 
  RowBox[{"1", ",", 
   RowBox[{"\[Pi]", "/", "6"}], ",", 
   RowBox[{"b", "/.", 
    RowBox[{"findB", "[", 
     RowBox[{"1", ",", 
      RowBox[{"\[Pi]", "/", "6"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695313136357625*^9, 3.695313148893731*^9}, {
  3.6953132001273007`*^9, 3.6953132006022377`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"Abs", "[", 
      FractionBox["y", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["x", "2"]}]], "]"}]], "+", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}]}]}], "\[LessEqual]", "z", 
   "\[LessEqual]", "1"}], "&&", 
  RowBox[{"z", "\[LessEqual]", 
   RowBox[{"0.48522935750544505`", "\[VeryThinSpace]", "-", 
    FractionBox["y", 
     SqrtBox["3"]]}]}]}]], "Output",
 CellChangeTimes->{3.695313203212021*^9, 3.6953133115270133`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"Abs", "[", 
        FractionBox["y", 
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          SuperscriptBox["x", "2"]}]], "]"}]], "+", 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}]}]}], "\[LessEqual]", "z", 
     "\[LessEqual]", "1"}], "&&", 
    RowBox[{"z", "\[LessEqual]", 
     RowBox[{"0.48522935750544505`", "\[VeryThinSpace]", "-", 
      FractionBox["y", 
       SqrtBox["3"]]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.999"}], ",", "1.9999"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695313319684861*^9, 3.695313338082433*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Xz+e5EL3m4BP6dJl4D7pffW89UCp/bmGrm1ThhXKrQdKecuZPa+uv1JI+j2w
0zNNMW9AvX3+vF7KQ85JLm+rLw9//VBqx8ciyPH0K7pOAnrzH7ac6+wiufVD
qf7Jq+0eTXjrV6CPcjfNVOP1S8Db3hSojETrpVI7baP0N/VF66VS3t3y8htd
tF4q5epVVR34/SHY7/jYrNKAZwe4uHdgq2k8O8DfHGvdD6+7Su27794ap4vW
XaV8ZRc/h7689Suwc+Vy43bTeHrgC0KLqwzQOq3UTvakjlea8Ppn0Hdauj5W
9z94SKMrk9R461pwXjdz05erKd50/UGartJzv76mzg7dJtH1B+AD7ozzW55O
1w3Azi/7ETqH5+UxvPexPVrbyul+E/CIxAltRjyk+0Rgv+LjhxB9Y7r+Cfzo
l/ONXN0KSD6AnV41d1rpheczPLvUQVLlSdfZwM5Ur7Hnu/HWY0Fvd8d6ljLv
fUS+R2CcNl2Lpwc7Dc2Xl5+Ygz/xPfO4nFiP7WD/Awc/Y479jO1gjuOF7WD7
kJ+YQxyxHdBjjuMOHPIWc5y3WI856MFO3t5Rj7rxxhWg16n+tVnrP7jZnGdz
lXnjDThv/Dry1sobC+k8GviyoE86V+7SeTScc06eq2o3Qouu+4F+ro7Wltwj
OSTuoO9X5dnponouiRfwth/E+wIicuT25aX8meCwzm8tut4F9s3KDILHnM9l
uEL+tW6rM+n4B/jGUWF6fXjjCrD/6/XYnL68dgFcz2ek6RheuwA7D2dod9Hn
6YG7JBz0nMzT43vjeeNPOQ7+wffJY39iPbaD/Ynzn7knX5b/2D7YwRzsMPfq
y+xg+ziOuF1gOzjfsB7bgXaBOc4HrMcc9GBnwqE82zG89gJ8T+01Ud//aC8m
MV/uTObpgX91vtFZ/z/0YcLB5n1441g4Fz2i5tjtwWF03Y/e8++gHzGe7kcD
r929doWokK6PAY9/On9/jSddH6P3+Wcq1yZnEjuUKw8ddiaT2KF8iMly6f3/
MjtgP+HprsyIQrpuBnzGmft7+kwQkXiBnYSn7wvSTmcSPfANSU2zkurLg/Xf
B26c8M5VROIC3KLNtBt6YXR+Abz31s5m7ZzFpF0Tv+VN4YaW0XkK8MJRTc7c
KqPrdcAr3qj27MvrH/C969DeMYd44fvYQY85ji/YweUEDu0d2wE95mSeiOzg
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
spl9JROreYlDVcTMvtiV8RrPt3fPY/a/Rtv8GdzpXC6zX/aqLn9HREQOs59l
rjw6Xskuh9mHCnef4/FTPZfZP7J8YrZndfc8Zj/IYk7OfIWjOQw/cGDu5uUq
YsY/88QVdTMNC5n9xCGKEk2rl/lMfWMcAseFfi1g9hn9DzS1NH6Zz+w3bVvc
Raf7twJm/2in0YeRlpn5DD86ZmVd6Aza/8N6suTu6vTiZtnMPsLoT/ZzXO9k
MTxT+/OWEa4iZj/CWtE3I7RZNrNOHrgw8rzunSxmvV1wNr7io3Mus9/xaVFU
0+b6YmZ/xDT+VuqiPbnMPktik0WOnV1ymfV2W+f115/ri5n19kGlq57E1NvB
/HVYvoGCs5jZd1v5Tbxj9mkJiSPwTwumqLmfkTDr8Ad0z/7ZnJPOrCsWqB7o
6LhIxKwDb1/XRNdviYhZNx7UeNGk7ZMymXXd6IOWiaVBGcw6sNG3EWP7Tcpk
njtt8tZn5T2zmPVJi+Ye4ZsWiZj1yRP9ur5u9jGbWZ98G5Vm0bsok9Gfslx9
68JKOu4Cvn2BR9j1NXTcBes2ze/92TxlQiKzviQZvHj1aL9EZn3p2OjBtdn9
kpj1pYUfCzIza4TMOk/NFdf53p5CZh3Gv5O6hnMvIbNudmbB3sdPfFOY9Zmk
FztqfPanMOsn9r9t0/KbpTDrIVVRNpuKPIXMOkbd5CkuXVenM+sYz5bYunwK
S2XWx/Z6tnnaaVoys75xr2vLNiLVdGYdbO0DPeWTPmkM9zy2fkxcrZBZH4s6
uiehtFEW4zdn528HFjbOYtZDRvZV25u4PYOxs6OLy1rTw3QcBVw/36p261E6
jiLrD9EJoucXE5n52rNnUQdv1Y9D8Px9meMrd1FlPDP/7TZyim65QRKzbuBc
enqI79s4Zp3hQ8fiGz4X6Xl+4DMeFdxpvD+N0V/1Nr7jcjaV2ddTLjx+NXBc
IbP/u9pqp6+GPu1XIf9bri8zGRKZx7SL13daGK74Tn8/C3771WGw6a4XIsaf
w/UHSeJf0HHshPmrEva6/yH3loDf1nX4PNB9Eb2fH/L25vurgbOTKIf3Y6r9
5klNV/Du+Ze1x9gVYZ1teXrI8yUKWoP+mFJO1v3K6syf88pDzsc2elqTd5Pe
FwrltNt8u3TRDXq/KJTn89uwak3+/f+y8rg9jLRYWUDv/4d67WjaJ95jA72/
FOwYd94wm28fyt92ntuxHTw9cLebi7YvkFD7UK/5ydpTx3rT8kO9epYFXxUX
VpH6Qj5btN/6vncivUcU8tYltYvRCRN6Hyn44c+NC0s/bqb3kYI+2HOO7soH
9Pt9UF/BpH4fkrTodxKhvjESt8k5PA71ih1upeHkQ+1AveJ6+A85wCsP1MvB
0ehWdQItP9nvCBK6HOKVE7i/Q+BziyLqBzL+D2nXWrSCfncP6lt88aT7Nf73
/mTxvT4z1eq0VhnxMzlPNbHxx+iWZeReJrL+8HLi3RfWZSS+4LdXs/tra8yi
95SC34qLe2f5G1NO7uXQmXhGP4beXwp+WHu3qpevBv2eI9R328lY4R5eOaG+
lvMCKy1jePeOQnuftW59wBF6nyf0t/ovFnxvXVNG/Al873uX5lsj6D2iYN/b
d6pquAP93iL0w78Shx7N4T0X+ocAZ/uX2V3pPZngT9VkZ+41V0z8T+Zlep8a
LRDS7yyQe0L2v24mTqT3c4I/Rzy93EwSWkQ45OGi7WMb2/O/+yCLr8N7M42E
91QP+fnlwhq3qUnUPtkX+Oh/W8QrJ/k9rLv7ghdptJzknPklW6PoFHrvJZnX
T/8VUR5UTOIOfrDafWDas7HFJO7gf+EHpTKzPHoPJ/h5rpWdbiHPPvg56u6L
Qd9OFdH73mX8ifGuFSHaWeSeK/Dzq5tGjz/Y0PsqwZ8DGrm3iZyRQzj403VV
5rqkAbzvLMj82W1izIoMnh786ROjrrZ7PbUP/nSZFqDUn1ce8OeRRE23uDEi
4k/wm6Ziq0yn8fQeSPDbpmbaP9L06H2SwJ+M1UidlJ1H7IA/nyjcCLmxI5fc
2wZ+8Igti9+Vk0fsQ76tHjlg3PlQeu8llP+PlUFco53UDpS/sp2uWv9sagfy
wVbSrsltXvmhHfmv9Vet45UfeG6govVVES0/xB1/Dw7KiTnpzxGH+GIO8WW+
TyeLL+YQX8yJfxAH/2AO/mk7O/eZr18mvU9elrdF2q/Eg6JzmHzu3qFjkWM/
ei8lcIOlD7UW/qD3SZJ9yZ+PW0VEUw7l5yw/pf++mkzyEPLH/XyYRPlEGrn/
Dfz5YP+hOZMf0nsayXnXwJCL05cmk3vh4Lnt3a4aObfjfb9A5s82RYuUxvD0
UJ6183r9nHOcPpfMW3P2HnrsQ58Lfssr07PJu0LLT+abtcHfdQvp/YeQ//i7
b1B+zKG++HtwoMcc9NgO5Bvm4B/mO3cy/2D7YAdzsMN8F09mB9sHP2MOeYvt
gB5z0GM7EC/MIV7YDugxB32fQbEdNp6i91VCP9D/nprR3Ds0vsCTFhpdaCQW
Mu3ok72N6qEpd8n9jRCvyTY6rULvvibtAuI7yeJDaXvTF0QP/t9/KDPRbNkb
wsH/ouTVLx6c5H1nQeb/ZutflfuYUT34U+V18ae4idQ++PPB7Xcmk0fRcoJ/
Vu275uFxnZYT/DN3wsRWp+u8CIf8v3D8+pX3fb6R9gX1wt/Xg3phDvVivtMn
qxfmUC/MoV55W46es1kcwLRr7uVTe69LbwmHeu24/NBw7mEB8348bj24zcTg
d0w/4Ld6WN5ol7WkvqQfQN+5I+tUiEO/h79/B3rMyfoYskPW3xCHfMN2QI85
OQ+M7JDzwIiT88D4O4OyeGH7YAdzsMN8lxDOAyP75Dww4hB3bAf0mJPzwPi7
hLA+iTjEnfleoUyPOVk3QHb+lSfQn2A7oMcc9P1aZc+4OOUS+f4g5Ml2U/0D
tRNOcrj/SR/WIrFyXQCH+5+jD8v2fOkYSDjonzQp0J33gH4PkcTRybadRtRN
DvdLlaUF+UpVvO8tyuKodLZWw3M3/X4i2IlVOPD44gvKyTm0jc3HneF/n5Gc
M/80qcM3+lyI722Twz89vGg5Ib4nh65VnMSzD/rCEJvTx10oJ++jQTt+VXDU
bxDfs0c/dlPl+Qd45xmjjHtYUX9C3FW6jQ9fsp7GBeLYVWnA9FH9zch3GyFe
+HuOEBfMIS6Ygz8xB38y35eU+RNz8A/m4B/MwQ+Ygx8mXs120+mynMP9ZNI5
79nX0ouZ+XJdtFXs47RiZj470N1B23VrLjO/czj8YNDvjbnMvKxvzM8gnZRU
Zl6z0SHCY2Mc5aDX3djxbvWFSPJegLjsDX8iiekRSfp/6J+drtp+693rCzOO
LVzZZ/Mpnh3yO/qqEq/obl+YceOjkQ5ezXpT++Sc/4r0aZt+0+8EkXa39aTJ
kP21hEN8Hx4YvzynJe87nrL4Tm4yokv/ALouBHzxx0vpqjw7EPfXu42nO/2i
z4W477o/JqxE8ouZp5iXNHqTqE7X2aCcT95P7q7F42BnmMuSwd3m0+/mkHWe
N2GbIqt+Ew55nnqiUcSd1vT7R9AutkVpuC/+RfWQh+aHPIxv8PRk3cZPp0kh
77ng//z7Yy8usf3JjHt/rN5k1zvnJzPufdnT2yTToowZ977uaOU6n6cn+8Xq
tmv+bPjJjGMvfFP0U7AoZcalm1YqHhlnV0r8RuZHqQt2DeStU4F/NBSVXusP
qWDmp13nmilG+NDvXQL38f1UYxNO18GgXm92f5t1fQbv+6SyenWxUp91hqeH
esVzO8f68NbloPwDjFdE7rSi63Lg/3VPHx5xuk/LA7xi2VWD0O20vuTc+4Sx
ToKlpSRe0H5X1rQKG8xbHwP/7FracaUfb30M2qm9suWdB7z1N2hfQ1pLEj78
oetvwDPEl2YeWFbKzHNTxb1Taw9KmPFS/ueXG+O+FzDzu9AHOy92sith5mWX
PlRExReVMPOyiKgRM7/dzmfGV4WHgntkHJIw46su4zwjK3l2IC5zDxVYuG8v
YeZZmQtPLhp/N58ZRy1fuFff6LCEGc9s3MxdNfxWwMyn1hlZW33krStCvJ5/
jbl7+GY+iSPEq9XIRxaZvPU08jsX4Zs9FmMLSD4ANyhXbHSft14H9rl2foo1
Y+h6HblXx2v4kp1jqB3gk1+Ye1TzykP2H+fEVpw+SdfroJxN5ztZ3BBJmHxr
fd7/dmWehMmHaBt/bY/EDNLPQ7x8Qj36qT3KpN+hk8Xry/rnGno8Pfg/Z73L
tJzzGcy8QOPwbaPdNhnMvMBMt5HHlDoRiQvw99bBzrkZImZe0NpXaXXqO7qe
Bnmo/vB42FGeHuJrf/TSocu88oD/iyPbxSxbl8GMPz9Vd7y+toaWh7Sv12Zj
VEeLmPfs2kW3fQc8outO4OfZU2uEb5eLmDypq85z8e+ZxewLLNtStPRm9yxm
Hf5BiJIgcKmIWb9tMrB/2ob4HCbuOs0cMgUDxUzc8fc6oTyYk3uc0Hc8QY85
6PH3PUGPOejxcyG+mJN7otBzyb1SiIMePxf0mIMePxfyCnNoF8x3XeEeKlQe
cp8V4uQ+K/wdWBiHoHKCHczBDvPdWJkdXE5op5iTe7FQecg9WoiDHj8X9JiD
nvluLKzbIw7tl/meLNzThTjome/MwjgKcdDj50K7wxzaHX4u6DEHPX4u6DEH
/ebMeavcHXjfw5XFsWxOL7tBf6KZ8XzruHfT/HvGMOP52tl3rz3ZGSvA8yxP
s6DYD8cTiR1oF3mnjH3FSrQ/J/PZzwm+U+8nCvC8LOXGpB/BClQP8U37mJd5
5A7VAz/butmNSw60PBCXO19eVh8+msisX929dqRjT159wW8txpdddOwcw8wv
jmV1mqp0lq5zgh/0jo8LcvRh17Fb9psQ5lOawLx3pnm4LB5qHcvsB00Zv3mO
e0UCsx9k3CSktkgvgdmXvH10W+3qEnZ99cCE2TO6rY5l9mtMq8dW+xcmMO+d
vtanxmjy7IP+fNTbgGO88oD+RuqsXr4FQuZ9hL+fC+XHHMqPv6sLesxBj+1A
XmEOeYjtgB5z0GM7kIeYQ3/IfL9Y1o6wfbL/izjYYb53LLOD7UO/hznkP7YD
esxBz3zvWNZeMIf2wnwHWabHHPTYDuQV5pBX2A7oMQd90IvL90tr6bo65EnO
uaA685owAV6XKwxQanVSM1KA19NOzP3pu2Ig5WR/cNbS8BVV1A7Ut9PJftyc
26sFeD3qpN+md1083zL9Xlit0XS9jQHMPl2012TXbS/fMft0L6bUiLqeFTD7
4Pi7zFB+zCGvmO87y/IKc8gTzMEP4/TLuy3qRvcpIL6Nyltkmo1i55s3+oQO
Oa/HzgcPTVYIbMWx851TukFaWyaw847/B1XO4z4=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
R2mWjw==
          "]], Polygon3DBox[CompressedData["
1:eJxN3An4dlP1N/BzD+e+UYaUkpmQQkRIihAKmSophcwiUyKpzCpDSjITFWUO
UQkhmcdkSuYhzUhFGv7fz7N21/te17Oe357PPmfvvYbvWvteeOvdNtl12HXd
I+Ouy7/uoPx3Wf5uncJFpl33yuR3SH7DQdet23fdb0ddt1byJ6f+i6l/Mvl3
JL9a6t+Z+ltTdkvottDtoadTv0bq10v9e1PfZ7zNk39n8u9I/vnUfyj5TUMv
JP2v0EeS/mjoP0n/KbRJ0sum/aJp/7fWfsXkl07+ueQ/kPzbkl8i+ZUy/pKZ
2zb6TfKc5FcJHZ66I0K/zJxuTf0toTuTfjntPpz+b0//5Vqb45L+eld9uzbf
j4WGSf+jtd8s9M9RvePNGeumYb37i94zdRvl76qpH42rrzG8+3/b+70j9Sv2
NYc7QndNa273+24Z67bQPUm/O31WC301bY8OfSn01fQ9OWNskvL9kv9K8sck
v2ryB3iH5I9L/r3J7xI6L+ntMt6bMt678veU5L+dNsdam9SvHvp8+n2hrzHe
FfpcX2MrO1zbrtoac53Q/n09S3rt0Bf7Klso6c+m7YnmlPzBoSOTXinP/U3W
Y6PUbziu8kNCW2ZOs2Ues4a2SPqg1v6EjLH+uNoclfxJXfVVtl7owL7aXhu6
KvUfyviz6J9xzk/+u/ZcynZN2/OTXjfp5/P8K1O/iLVIm3+kbq/83TL5T4T2
SfpXGePu0L2h+0Knp812qVszdWu2NTgh6W90tTbfTP6k5L+Z/FrjWrNftb7W
8qep/2nqN8zz/5Xn/yT5y5N/f/Ivmk/yVyS/sUOY9u/J39OS/F7Kvpi57pQx
z03+fSl/Nu2vS/ufpe7Dyc+W9vOFtkh6y9AC09oTG4cOa3vlxJTv4v3TZ/mM
t1DabJWyT4QWTvrqtLkydR9IfjKtb/Rc6FPj+nY/SNmPU7dj2myXtt9N/uLk
t03+48nfkLHnCGXo7orQd5N4Vf7eFLra90k+zbobQ5cn//6MvaX1zhizJ392
0q9O3S2hX4xr/9nLG6X+5Ul9I99qg9A/k14x9W82//TbKPl9MviBmcvPU3ZF
5vaLlC+W/s+Efpu2W4e+l/Q2qV809eel/jXJ32ZO49rT9vYmqf9vxjsi+Vck
f23ox0lfl7+zhmYPXR+6MP1fl793mHPqf578okk/HXqinSXzdyadqX0y7rLJ
Px96Oem9nKnUXZP0T6x32q8Z+kbKj+1rDymTtrcezPjvSt+Z0meQ/H3Jr4It
Jf9i2j2ROd+Xsc5M/qO+R+q/m/S37M+Ufyd9zhpUG21vTf0bU3cgHpnn/yj0
s6T3TZtd0/aB/H1T6ufK37nSdrk849Dk35Q2l6ftH9PmD6HdQruHHk+bd6d+
trSfLfmHk181+VmSnyT/aPKrJf/K5GdJfqZxnTfnbufkt0/+nOS3zfiLZ/wV
kn9j0pun37qZ75J4XFd70F58I96U/ILJX5n6861p6ILQhaE3NP6zQOp/mvrX
O+PJz5f8ZclfNK1x7OXtQ8OUvz/1C3nvPPPg/P1k8juG9h8U3yUP8Hd8equM
950mH9+Q/O6pOyT5w0J7JL1A6vdOev7U/zjPWxpPTv5TqduhL956tPaD4rG+
71tDa6Xt2qFX2LNdrYm1uarxq8dDD6RukvKNkt4ZT7HXU7Zv8pem/Jy0Py5l
qer2TH7t5I8flVz/ZQr3y/jrhD6cssWdJ7wn6QVS/5vQPWl4dfJvSPrJ0MN4
z7TG/UTabt3XN77c3h3Wt787486XtveF/trmYC7bD6rP2Unvmbotkt8gYy+c
MffpiofgJa8eV712Ryf/uuQ/nfx5yX8z+e+Fzgp9P3R2ox9Zy2HVzZv2n3Eu
kz91WucIfybf8fEvJ//15Pewp9N20bZ/Tk7Z8X2deWcf//130t9K/TapP878
JlWGb/9nUm3xXLx3s9AcSfehDw6Lfw6Tfqjt/5Uy/lJ9nZdtnYfUfzb1v27n
eYXUvzF1N2bMG0J7JL1nX330pY8sk/SloR+G/jIp/r9C0qsMSn9aKemV7Sm6
RmiVpJ/I+Kt3VabukXb+Vk7+rX2RNP1j+aQfa+fXmMY+Me8/X9KLp3z3afFg
vJj8einpwbTk1Cg0npYMJUsnoZeaXKZ/rJD296f9j5K/rC+ZQraQTWQ5mU5G
kVd0mY+m/asy3mWj2k/21RfTfivyIvTX0Auh/dL+ktR/PO3nIqcbP1wm7RfO
eB9O/an0rdS/ZlpzJkPIDu9CR6ArbBp6JRmd/u9M++XT/w19rYm1oV++KemT
M97i1iLtvj2pNtrSNxfr653oFpcO6l2/2PSl5VP2y9TNmvzsyc8Rmj3pfTPe
xW1+c05Lp6BbHG8/T+qb+XYrhn49KZ6Kt84aemXSv0vZM6Hzkj4/NGfo1ak7
KO2Pm9ReuST050ntmbmTfm3qD079ick/nvzaef4LKdsez0z+vKQfTP0fJrUf
8Gy8+hV9yQSy4XOh9VL/p0npJfSTzfIuL5O/GW/X5D+V9PfwX/pY2lyXti/5
HqnfG1/ti+fj/Vfmeden/n2hzyR/lTOd+TzV5BmZ9T261bh48/wZ79TU/T5/
35fxFknZQn3plHTLt4ceTro370HJm2nSL6f/dFDy899Jz9zXt/RNvd/1eGFX
ZeqebOfHes3R15mje/1wUGfxZ40/GtPY1zb5PzOmm/rrmv5hDubydGi95P/p
++T9NkifE+n/GfORjP30pN7Zu36/r7W9P3VnD2qNT6AfpP0B+GHTn50f/GfW
aT3Ts8nbUdK/bWMa6+zQMeOS5+T6wfhbyk4LvYkeNa70qXSVrsp2D12Q9PYZ
f8mM//XUf60vubagZ/fFO/FQspi9dUTSj1gD88kzTu9q/egep47LNjw832XZ
1P+3r/P5nZR9RFvzSfqu9H8s9V9N2cz2X+joSb2Td8NT8dbnMt7fkl4ydHvy
D01qD1h73/MxumvKd7GPk35P+r9nUPx332nZJN7Ju7BVyIDj+tIbyAZptgsd
Qpl3P35QMn2B9s2+kPS3BvUt7wrdlvQf6eN53mrD4mdstD0zh9/kmXfSHZzn
pPdM/wtTv0PySyf/lb5kFNn02kb0lW8Oqm6epk+Yw1HJLzGutbJmJyc/77Bk
Gxm3V553Ql/2CPvxgYx/SvKnDOr5DyX/3b50RWfMvjPmkX3pSZ71sdAZXe0/
+2cwKX0Hj8Artkj9t5M/d1D8xze3l1ce1loYy9y9gzHPsa8HtaftbXb4Mcnf
MCyc4IHG8/C6B+mnoa3zHod4fvp/Mvmd0/ZqZ448oXMnvQu7Br8bV502OzdZ
TVaRWWT27ogu4IwmfVfobcPiz3ckfXP634l/sRXbHPASPMXcfhW6O3QvvjQp
+5dtTeaT/RdlrvPUtu9uwWtT9rFhyafXT8uGYEt8KvlPpdEh3jXv9iffp42J
1+P5nnVk2t+Vumft1/ZscuSeNgeyl65CZyGDvcPtoTvbu92R/vfSRVP/mUlh
FoNx4Q4UQfxz3jz/9fl7yqT0BTo8OUM+LYBS/6Vh8du9kz8g+WutV/KXZIxr
2ve2Np8h8wZl07Bt5rWXkj409Sel/oC0v7Qre3PBae1ZPATvsJfZnHQn33Om
pA8jo9L/hfSZl84zrrSyL8un76vSdofM+bNJvw41+XZC6r+Z9i951dQfSVYl
/8Ou7ON5p4UfwBbI/5npsn3Z598no8alT6yU9H9Cf0t+2Jfd9R/fMDTLuPAA
MpQsXXVSWA/M58m+9qR9eNm49uq207KzZsjpxned34Xy/C+lfNuU7TQonZpu
/b48/72h79A/h2Xb0HXpvGyc2dJ/p/R/TfL7J79gX7YaHv9g0p+jU6du/ZSt
k/x+ya/onUKfT/qdk6rT5gvJv4N8Iw+HVb+y85G2z6bskfRfB15Fd/dNBlUH
y1ujqzZP9YV5wbpWm5SNACtgr53bdPdLyM9h6fAf7Qs7oP9/q30btigdxjc6
nX2W/EWhb5OXKdsydecm/1X8K+//cbpInveVaZH0+qHD4S3jwiTSvDs86a3S
f4dBfT+2wxaT4mV4Glvud6mf4hfpv2bqtujLdmHDnDktG/GTyf90WLbjJmQL
3bSrMn3ZZGwxY2w8qvX8eOpnSvl7MuZuyV+R9MXTsvHYjId2ZfvZv68NbTct
few1zf5hrx6mPbw1dIbvMazzg/f/MulHp8Xj8XqY4YNJL5/+B3XFc/He45u8
JoPIonNgDcl/OmPenPzSk+IFD2tDF067VciUUckvOjpdHX+/3no2fu4Z/+hL
ppAtxn9kWjKRbPxV8k8m/7fkF8aLMtZmk7J/HoDzjksfowPQBe4hj9J+85an
I9DlPz4pWUPmbDkujIP8ujftn57WnMyNDLqRLTYufBPOeVPyNyR/a1eYDmzn
Z6GrQl8OfSW0Y9rsMC09+fV9zcnc/jku/e720K+6kiFkyepsmEGdvwPS73T7
2Dq3dfp52t+c9peHvpT0nKEPOi+whWnpwHs3ffeSaZE0HXinvmQi2XjjsDB0
NixbFmZ9b9MXyFeY8+1Nn6GvWH9441FNX9Eenvwxe2tQ5+8707L998Tfu8IA
YBqwDePBoI9gczuroaPs9/T/RNpfkPyx8ITQ+cPKn9T0T3zxmlHpwnTm4aB8
AnTpmZo+TieGzbFR2CqvSdlcfWH6sH322yJ92Sh4OZ4+T18yRNk8TbYcP6kx
5mrnho497guHo3uzt9hJNyR9Y+il0Iuj8hv8fVSY/UstDcun85ujubEFng39
ZVR+hz87y3nWjqGL2G3jGputwGbwDDJQG3VkIxlkjq9tsuk3KXtwXLjomaNK
P9EVRqrs66FjM97XfJ+89zec9eR3px8k/9eMMXf+HpPy7SelR6/Wvu+fB2Vz
sj0f1nba8ILkH0r+uWnZz5cNSueke/5+UPLtreTpqOTHwoOyMdga26X90Smf
Pf3/krr7U3YfnY9MGpV+u2roI8Oy2Rdra2jt2MaPDssWOJgOF/rqqLAqmNUg
5f8ele+ED4XvxbO+lPqdu3rmXtPC4dh8bD82AdsAv3si6dMyv4VTPyfZ09aW
74hPyBrDDL4QunRUWMLL7SzD0dhuzjdbEAaDF3m3x7rCsL0jPOPv48LF+Aru
CC2duifo45MaC96xSFdjbp05/aXJQ76ubVN/dtLvzXz/PC2esVvotsZLNso3
2mpQ+NbXnMfktxmUvDsl+efT5h/p/7nkj0i/r+PZw5J/30j6ynFh6enWnTwq
mcGWd17stw+Gth4UHnZc6p5O+6fGhXufH/q9PZC+v0Ot7rddYeLaLJdnLpq/
T+HhdIZJ4YZw7x+M6qyxN9m8ztzOTT+nE9J5/pqyD3blk+Ob49NTJs3Xd0ba
LzEqTOXkplPRreCOeMhD4zozzspZobnT/nWTwq1vCz1mzl35DPgOHh9XmfQ5
oxqLbf6Grsbce1K22f1sstT9KfTH0P15jwf68jHak/Yi36N3hZXC+L0znol3
0mHOaPbbHuPCpJytvUcl79iEiwwLT4LRw+bhYXuR5+PyU/28L5lKtjpDztIv
Una19U//z47LpiLvfj0srOeWUdm6bN4Fkj+DjjQoGUfWoQ+My45WZ72trTV+
ZlzP5C/6QVdzuaYvfxmfGP+Ob+xb+qa+/UPt+z4depStMy5deKa0OyrPvz79
L0z/s1L2mXH5p3Z0vjynrzH5jviVPMs77TMuv9UvGj/B/550/sbFQxdv87U3
raG9aE9a2zv68r9cF/pJ8p8cl7/gN/hTw1PePy4799TQbuPyd+J/z09Lx1uT
bjsq3W/d5N83Ljv5RLJxXP6hi6xBX2dkrnY+fMvHp8WD8B76zAVpc05bn99P
ao7myt/0ZNJ/Dj1rLen3k+pDF7p7WGNt1vaMvUI3+oYzk/b/Tv5QNl5f/pn7
B4XX3Jf8m7uyGdmO9Db626dSNs+wfFJ8U+Z8e1f24y99v2HZs3yz/FswSdjk
hs3+4WPlg+VX419bJrTssNaQP5DP0dpe3Nd3+UPm/sfQs9P67jDGGbj0tNbi
kkGV3ZU+D6Tvp1P2uUnJJOsAAyarrujL34lH4pUX531e25WNx9ajG8Jj4cn0
sA+3d/auL/Rlo9l3M/yobV77p/4AMnta545vbDQoPg7DOLvhD7Axc7E3yMgZ
uHR7J+9Cdv6qyYPHQ/eOy2eJ3/JnXjEuGUh228P3N7lIdrA52B7XNX2Tf/H6
pH+Y+td3pUPi/2Q4Gf8/2X5G0rO1tbup6aR0RzokXfW0Uemuxryu6a/q+Euv
Hdc33GZcfmbfFs95scmwf7SzucO4/MzO6K+bzcBWYA/AyHbNM3YbFXbmrJyZ
sS8Y1Jnh4+TrhI/sMSmb2PeFubOVnSH40vFdnS02CVlNZj88rWdba2tuDh+Y
VGyGGI1/9xWjwX8LQ4Qlbj8q3xgf2bJtT9qb242q7mfTsv13DF3d9pW1hNHy
MeDRbEi2I9698aTwC/7hK6dl0/E78V2z9eCksNeP5tmbhz43Lnyev3ixadXB
Mk/vqg08cth0XkIYns/Xutaw/MufH5d/gj/zjfbmuPAH8RdvZuuOCw+Bry7V
zpGzM0NfmFTMidiT5ZK/LvVvyd+lQzvRNUNPpP06XWEs9GGYPGx+ibT5cdrP
Oi5/035svNS/O7T6oHyKfIsbTMqvyb/55758gIul76aj8g2uH/o83tCVX5KP
11jG5MuChdCfyFiy1hl1VulEdKO3jwu7g+FdNS0fPb/oYV357jecFF7En/xT
+uq05u4ddunL58s+4jPgCz54XPvRvuRvfak9D4+4v51753/t1K8zrH1sP7Nh
2bJs1L+HzuzLdj238e8HUvfMtNodlbEOHZRc/u20bEs2Jqz0VePyB/MLH9o3
X33XYkD6kiViP2CuZMqm4/K/88OzZ8kmZ8MZIaPIavg/zJvMZuOunuftOyrb
V6wSWwBGeniTadrqs0E767AqmJUzv1rbL3zUfNXOHJucLe4sksV4OZ5OJi+b
/P5dvaN3xUvJcjEpeCpbne3BBmGzi7WBd/Lp8e3RZegOdAg6DdlOt6BjkPH/
GpQ/HUZz5Kh8GPjvGcrS9oJxxebwN/1xUjY9215MitgUZ8xZg6HCUvXRV4yL
WBcYKxj0uoy56rT6r5G6/UaFFVwzKH/3VaHHhqVPmYNxYNf0EbrWj9PupiZP
fM+Lk78h+TmGJVvJ2K+NyvbaNfmjB2WDnd14Bl4BK4cxDa1HaDypGJg0m+GD
V3bmuPAiuNHVk/KTHdjVGogJ8A3wWfzWtzlxWvgXjAxW9pHQZn3Z3SdM/1+Z
tLbijOAC/BT8Gve3MmnYAB+vuLZl+/L9ioGALcGY+NrV8TXzOWuzWfruNywb
hC3yo0n10Xbu0Kap33dY+ihfjGfDGmAO5kDeXcIGSPmHpvV8vmYxb/Tru0Nv
6QqD5r/7UBuPjNRX3ItzBfcQRyUGRpn0PY3gXTNirlJ+Q8OAYD83tb+wIOfF
WROv5VzAOcTaLdNsD/bopGEesA+YCt/F/8bQl24thgoG5hk3NDxk475sGrYN
jMUY+h7Vzh/Z58ye2uQtfMz5JyvJXVgNzIav6dF2Vmf41fpKw9Jgdie1849v
ONMPN5ltDH2PbzosvkOme5YYRHgOfiCWUQyMWBgxF2IvxMyInREzInaETsI2
tWa+/5rO2KB8CHwJC6X937uyfz88LRuOLSfWkn98Dd9rUDocXQ6mDlvnY58m
/er0fyh1eyX/3mmVwfxh/dpu6J3Sf6mu8MeZ0v4pem3Kbu/L/rkZH0q79aeF
68P3l+/KRt4Aj52WTce2k957WP4VZebIlw8fMPdNphWTRUenq/PJ8s3yefB9
/Cm0ferWTn6tvmIwnA94BbwIbgRnEHv6FjrXpL6xb7vIuPY4W3K5dvbYrGxX
ODdfADz7/X1hTLAm+OMhw3p/9ihim8Ik1bHvYcOP9eVv+N8c3tLmxl7g2xWr
9eZJYSz2tj3OzhYDJBaITk439+zNU7dxV3O4PHRn8n9JmzkmdcaddbE38IOr
JrVn7JXFQyvAB9L+v/SLdqbgk+ShswaThFvyacIq7UFy7Ja2N+cbV8yOWJ3T
poV5nGzP9IWFwBRhizDHD/VVp0xaG/4FcUX8CuJ/+BAubvt7/nGV8ZfwQWjL
58B+h4FumfxPJhWXZQ7mstS4YszEhF3UxjMvPBavnb+1O63VaQP3h//ry2cA
84f18yXA+GH99KdlUv+WccWAif3asS+dk+5JR6Wr2jP2Dp30zFYGa+CD0FZ8
o1hHMY//6gvzg/3BWOcc1bx8y82aXLg26bcOK/5Q/O6JTW6c3L61+mtCP5+W
fukv3JHOQffgg+Jn2qYv3xSdme5MR6er07npoTs1XdycL238xLvQu2FZMK3N
+9LxlyLPRqX708cO6sonwjcCD6d70kHFipzS+pOB5k7n4sufa1i6GB+ONbWW
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
/wP7ZxGb
          "]], Polygon3DBox[CompressedData["
1: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
          "]], Polygon3DBox[CompressedData["
1:eJwt1nuwTlUYBvB9bt+hcjm55hJHcic6iCIxbsclgyik0JQJuZXcJhUdhyN3
/qqRpmYaTYVCoUJTmtFkcvujhJSk5HaOWxL91qzvj+d7n/W8z/vutfdae+0v
f8ykQRMzkyQZCSnI83OesD8jSbKNd4k9cpPkDXrNLDAukq+Ft6LtZyo13kev
x18TFtP25CTJV7SeavcZX8iMfXrBbvotfAfEMvrt+jSHGnqOkT8plsqNxh+D
TOP68o/iWXiZfsPSPJ++L8wl9BOPuu7falfq21JcSLvM25CvPL5EvKi+jH+l
2FvuW769OXFuF9VV4SnAl/MvkPuathR/mv4MrMB305bJrcLb8k6DZngT2mK5
bDil5xR6Y3pDegntbrxAjx9c+4zxVJBKyMl2P3+qKUdbAS0kWtNe1GMC1MFr
0a7AVfidd5k+ldRWgBfUXIZq+h+Q25sR1+UnubP07noskvs+6PIlqfhsS/WY
KneD/jDvzYw457byr0M2foU+W48cvAGtmpoptLVhXWk9oUiPQrhCOyp3UJ9D
cNC1tsrXpdVP65d4qobnILfHeJC6s3reoA/Ex0Pt9B4bh1/mOcHbxrgB/Zpx
X73+EyfJL4A+9EJ4V4+X5Jrpt1HNRp7utDlyL8Np3mK5bTwLxSL4FJ8vzk3F
Z3jEeFpmvJfqtEuhRm1TvXLC2opH9H6CXoHeiGe1+mvqmuDLUvHew/0WwD9J
9DQLz45/tdgivedXicuhEn6TryPkwyH9K6Xi2j0PPyZxz0yn1YLr+Aw4T/9X
LKK9rcc3xp+Zy3PGJ+lb8Q2wg14iZtN/pY8Vv4Mn1fQX98CosN9c9yI+D58L
fXm3uJdR6X17WJ+lYmXjc+n5hPe3evCH94e3avq+jul13vgc5EEV+kr6q57b
Q3hX/BW8mrpS3htwD94ftvFvCOeAa33M14m/s7gROod58XaGbjxreMpBeXXv
yG8Ia0Y/xbeW3gvvw9sOLzH/nplxL4Q9cSbcR3jWtIpQyFtAfz/cl9jYuJ+a
NtAuies/XG6G3AlxBMzEfxN/gQnhXdBvnWu9pnZoWF/8WBLfzbDHrupxIDue
Ux3obWEANOdvqb52Kr4LxWIduInPF4/DJPnJ6TNoKf8Q2mmYRfvIdf/CZ+Pr
8XPZsXawZ3zYuKlrrKBt5unC00XcBF3xfvK98WGht1gIw8N+CmdmbtwLYU8c
02+RPtf5H5ErTp+R4+XGwc5wXuXE2i3hvQzPCN+MbxPvVNs+7Fm41Xgk/Vn+
Ifim8I3gH4p/gq83163674RhrvEgDKGNkssLhyb9dEY888PZH8722+h/ZMS1
Cmu2irY/K/KwjnXDe2k8UY9ZauYbt8qMcw/3sCt8E3LjMw7PupPcEp5i3kNZ
ca3CmoXrVs6K73v4vpTSWifxOxjO3sdz4xkRzoown+v0XP4R9C9hDD5Q3Rf4
U/hgfG0qfiPuyoj7IVzr5/BO0OvR30rFMzAfXyO2TsV7KTbHOzPi2Rg88/Ts
hg+i1ZCrCWX6zICx9B3yM8NY/j3Pp2L4FuId1K6DCvxn09+vhvz30ibjjdLf
hTfhDrxlKv43CGd1Hf7jUKbPnPAtwHvg5fX+PDeeLQN4t+Oj8enyHY3b4R+K
98N9+AdiL7n2+GzeC3ie+czCH5DrGPZ2OA9CTdjz4v8eKRZo
          "]], 
         Polygon3DBox[{{1007, 81, 653, 812, 298, 82, 1005}, {1030, 94, 302, 
          814, 658, 93, 1028}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{935, 185, 924}, {939, 12, 927}, {927, 12, 928}, {924, 
          185, 921}, {921, 185, 935}, {928, 12, 939}}], 
         Polygon3DBox[{{925, 9, 18, 936}, {928, 9, 7, 927}, {936, 935, 924, 
          925}, {922, 921, 935, 936}, {925, 924, 921, 922}, {939, 18, 9, 
          928}, {922, 7, 9, 925}}], 
         Polygon3DBox[{{927, 7, 922, 936, 18, 939}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{187, 188, 199, 1211, 1212, 201, 1216, 1217, 1218, 203, 1221, 
       1222, 205, 1224, 1225, 206, 198, 196, 1209, 742, 1544, 741, 195, 1207, 
       1206, 193, 1203, 1202, 1201, 190, 737, 1539, 738, 1540, 187}], 
      Line3DBox[{1200, 191, 1210, 200, 1213, 1214, 1215, 202, 1219, 1220, 204,
        1223, 197, 1208, 194, 740, 1205, 1204, 192, 1543, 1542, 1541, 739, 
       189, 1200}], 
      Line3DBox[{207, 209, 752, 1553, 753, 1233, 217, 749, 1232, 219, 1236, 
       225, 1239, 1240, 227, 1243, 1244, 1245, 229, 1249, 1250, 231, 1253, 
       1254, 233, 1257, 223, 1557, 758, 221, 1555, 756, 1554, 755, 215, 213, 
       1548, 1547, 746, 211, 1545, 744, 1228, 1227, 207}], 
      Line3DBox[{1226, 208, 1546, 745, 1229, 1230, 212, 1549, 747, 1231, 214, 
       1550, 748, 216, 1556, 757, 222, 759, 1558, 760, 1235, 224, 1259, 1258, 
       234, 1256, 1255, 232, 1252, 1251, 230, 1248, 1247, 1246, 228, 1242, 
       1241, 226, 1238, 1237, 220, 1552, 751, 1551, 750, 218, 754, 1234, 210, 
       743, 1226}], 
      Line3DBox[{235, 236, 1263, 767, 1564, 241, 764, 1562, 765, 243, 1268, 
       780, 252, 775, 1571, 776, 254, 1269, 260, 1272, 1273, 262, 1276, 1277, 
       264, 1281, 1282, 1283, 266, 1286, 1287, 268, 1290, 1291, 270, 1294, 
       1295, 272, 1296, 258, 786, 1577, 785, 256, 784, 1576, 250, 774, 1570, 
       773, 248, 1267, 771, 1569, 239, 238, 762, 1261, 1260, 237, 1561, 1560, 
       1559, 761, 235}], 
      Line3DBox[{763, 242, 1572, 777, 778, 1573, 779, 251, 253, 259, 1270, 
       1271, 261, 1274, 1275, 263, 1278, 1279, 1280, 265, 1284, 1285, 267, 
       1288, 1289, 269, 1292, 1293, 271, 257, 255, 783, 1575, 782, 781, 1574, 
       249, 772, 247, 1266, 770, 1568, 246, 1567, 769, 1265, 245, 1566, 1565, 
       768, 1264, 244, 1563, 766, 1262, 240, 763}], 
      Line3DBox[{1297, 274, 801, 1585, 802, 286, 1310, 797, 288, 809, 1590, 
       810, 296, 812, 298, 306, 304, 1316, 1317, 308, 1320, 1321, 310, 1325, 
       1326, 1327, 312, 1330, 1331, 314, 1334, 1335, 316, 1338, 1339, 318, 
       320, 302, 814, 300, 816, 1591, 815, 294, 808, 1589, 292, 807, 1588, 
       806, 284, 1309, 796, 282, 1308, 795, 1582, 794, 281, 1307, 1306, 279, 
       1303, 1302, 1301, 276, 790, 1579, 791, 1580, 273, 787, 1297}], 
      Line3DBox[{789, 277, 1311, 289, 798, 1583, 799, 1584, 800, 285, 287, 
       295, 811, 297, 903, 1633, 904, 305, 1313, 303, 1314, 1315, 307, 1318, 
       1319, 309, 1322, 1323, 1324, 311, 1328, 1329, 313, 1332, 1333, 315, 
       1336, 1337, 317, 1340, 319, 906, 1634, 905, 301, 813, 299, 293, 291, 
       805, 1587, 804, 1586, 803, 290, 1312, 283, 793, 1581, 792, 280, 1305, 
       1304, 278, 1300, 1299, 1298, 275, 788, 1578, 789}], 
      Line3DBox[{1341, 322, 826, 1596, 332, 1351, 822, 823, 1594, 329, 819, 
       330, 341, 836, 837, 838, 343, 350, 846, 348, 1359, 1360, 352, 1363, 
       1364, 354, 1368, 1369, 1370, 356, 1373, 1374, 358, 1377, 1378, 360, 
       1381, 1382, 362, 850, 364, 346, 842, 841, 840, 344, 340, 834, 338, 
       1356, 833, 832, 1601, 337, 1355, 829, 328, 1592, 818, 326, 1349, 1348, 
       324, 1346, 1345, 1344, 321, 817, 1341}], 
      Line3DBox[{1342, 325, 1353, 334, 824, 1595, 825, 1352, 331, 820, 1593, 
       821, 1350, 333, 835, 342, 907, 1635, 908, 349, 843, 844, 1602, 845, 
       347, 1357, 1358, 351, 1361, 1362, 353, 1365, 1366, 1367, 355, 1371, 
       1372, 357, 1375, 1376, 359, 1379, 1380, 361, 849, 1603, 848, 847, 363, 
       910, 1636, 909, 345, 839, 339, 1600, 831, 1599, 830, 336, 1598, 828, 
       1597, 827, 335, 1354, 327, 1347, 323, 1343, 1342}], 
      Line3DBox[{365, 366, 1389, 859, 1610, 374, 1386, 854, 1607, 855, 370, 
       371, 869, 870, 390, 1402, 1403, 393, 1404, 1405, 394, 1406, 1407, 1408,
        395, 1409, 1410, 396, 1411, 1412, 397, 1414, 1415, 398, 882, 881, 389,
        386, 868, 1619, 867, 1618, 385, 1399, 865, 1616, 369, 368, 1606, 1605,
        852, 367, 1604, 851, 1384, 1383, 365}], 
      Line3DBox[{372, 375, 1400, 871, 872, 1620, 391, 911, 1637, 912, 403, 
       883, 1623, 884, 401, 1416, 1417, 405, 1420, 1421, 407, 1424, 1425, 
       1426, 409, 1430, 1431, 411, 1434, 1435, 413, 1438, 1439, 415, 886, 
       1624, 885, 417, 915, 1638, 914, 399, 1621, 877, 876, 1413, 387, 383, 
       1614, 863, 1613, 862, 381, 1396, 1395, 379, 1392, 1391, 1390, 377, 856,
        1608, 857, 1387, 372}], 
      Line3DBox[{1385, 373, 1609, 858, 1388, 378, 1611, 860, 1393, 1394, 380, 
       1612, 861, 1397, 382, 1615, 864, 1398, 384, 1617, 866, 388, 1622, 878, 
       879, 880, 400, 916, 418, 416, 1441, 1440, 414, 1437, 1436, 412, 1433, 
       1432, 410, 1429, 1428, 1427, 408, 1423, 1422, 406, 1419, 1418, 402, 
       404, 913, 392, 875, 874, 873, 1401, 376, 853, 1385}], 
      Line3DBox[{887, 420, 1456, 893, 433, 1457, 1458, 897, 435, 1459, 1460, 
       1461, 436, 1462, 1463, 437, 901, 1631, 1632, 438, 902, 1464, 430, 892, 
       1630, 428, 1455, 891, 1629, 427, 1453, 1452, 425, 1449, 1448, 1447, 
       422, 1443, 889, 1627, 419, 1625, 887}], 
      Line3DBox[{1442, 423, 894, 895, 896, 434, 1479, 1478, 431, 432, 442, 
       1465, 1466, 443, 1467, 1468, 444, 1469, 1470, 1471, 445, 1472, 1473, 
       446, 1474, 1475, 447, 1476, 1477, 448, 441, 440, 1481, 1480, 439, 900, 
       899, 898, 429, 1628, 890, 1454, 426, 1451, 1450, 424, 1446, 1445, 1444,
        421, 1626, 888, 1442}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0D9LQlEch/FfCV5oCHoJrU29iCQChXBtKJrsDzaEDRJCU5SiGEG11ZIQ
BkEQOLa0urU3ODQUBJarn0PDw/c5z/VeDi5uH5SrMxFRQmU24gOvQiGL+OH1
fMSh/caKNvRsLhfR0Y+1jG/on/qvPXVu6y0s8ZqW40V+znu8aVt44F17gUd+
Za9xgyfnW3uHZ36f3sUL76ffY5Du6h7rvp3xI22Zd/klzvif9uVuW3bBuaFv
8nn+rq/xiVbDiW+N7ar25tmI7yf0vQTftTuo5P//rym4UiyD
       "]], 
      Line3DBox[{1639, 738, 450, 1862, 626, 749, 1655, 751, 464, 1885, 779, 
       637, 1677, 776, 490, 904, 1839, 655, 812, 653, 516, 845, 680, 1933, 
       1934, 683, 1939, 1940, 686, 1946, 1947, 1948, 689, 1954, 1955, 692, 
       1960, 1961, 695, 1966, 1967, 698, 849, 520, 658, 814, 661, 1840, 906, 
       494, 786, 1682, 639, 783, 1681, 471, 760, 1666, 758, 628, 1864, 455, 
       742, 1645, 621, 740, 1856, 1855, 618, 1853, 1852, 1851, 739, 617, 
       1639}], Line3DBox[{1646, 743, 458, 1874, 631, 763, 1669, 765, 480, 
       1902, 800, 647, 1693, 797, 508, 908, 1841, 674, 838, 1925, 1926, 540, 
       1718, 1719, 541, 1720, 1721, 1722, 542, 1723, 1724, 543, 1725, 1726, 
       544, 1927, 1928, 842, 678, 1842, 910, 513, 808, 1697, 650, 805, 1696, 
       486, 774, 1676, 772, 634, 1675, 461, 748, 1654, 625, 1653, 1652, 746, 
       623, 1857, 744, 1650, 1649, 622, 1646}], 
      Line3DBox[{1647, 745, 1858, 456, 457, 1873, 766, 1671, 632, 764, 1872, 
       479, 799, 1695, 802, 506, 1901, 507, 2039, 907, 673, 837, 672, 539, 
       884, 712, 1997, 1998, 714, 2001, 2002, 716, 2006, 2007, 2008, 718, 
       2011, 2012, 720, 2015, 2016, 722, 2019, 2020, 724, 886, 546, 676, 841, 
       677, 909, 2040, 512, 1907, 511, 807, 1905, 804, 485, 1882, 773, 635, 
       1880, 770, 1674, 460, 459, 1859, 747, 1651, 624, 1648, 1647}], 
      Line3DBox[{1656, 754, 465, 462, 1884, 777, 1678, 780, 487, 488, 517, 
       811, 651, 1908, 809, 514, 843, 1929, 846, 681, 1935, 1936, 684, 1941, 
       1942, 687, 1949, 1950, 1951, 690, 1956, 1957, 693, 1962, 1963, 696, 
       1968, 1969, 699, 850, 1728, 847, 518, 815, 1698, 656, 813, 659, 492, 
       491, 784, 1886, 781, 1680, 469, 468, 757, 1664, 1663, 755, 467, 1662, 
       1661, 453, 452, 1854, 451, 1660, 1659, 466, 752, 1657, 1656}], 
      Line3DBox[{1667, 472, 761, 1866, 1867, 1868, 630, 1869, 1870, 762, 476, 
       1871, 478, 793, 1692, 646, 796, 1900, 505, 831, 1717, 670, 834, 1923, 
       537, 915, 1844, 916, 573, 1993, 1992, 570, 1759, 1758, 568, 1755, 1754,
        566, 1751, 1750, 1749, 564, 1745, 1744, 562, 1988, 1987, 709, 913, 
       1843, 912, 528, 1706, 819, 665, 1709, 821, 497, 1683, 787, 640, 1685, 
       789, 473, 1667}], 
      Line3DBox[{1668, 474, 477, 1895, 1896, 644, 792, 1691, 795, 1899, 503, 
       504, 830, 1716, 833, 1922, 535, 536, 914, 710, 880, 1991, 1990, 569, 
       1757, 1756, 567, 1753, 1752, 565, 1748, 1747, 1746, 563, 1743, 1742, 
       561, 1986, 1985, 875, 708, 911, 527, 526, 1916, 823, 1708, 820, 496, 
       495, 1890, 791, 1684, 788, 641, 1891, 1892, 475, 1668}], 
      Line3DBox[{1670, 767, 1875, 481, 648, 798, 1694, 801, 1903, 509, 835, 
       836, 671, 1924, 538, 883, 1994, 711, 1995, 1996, 713, 1999, 2000, 715, 
       2003, 2004, 2005, 717, 2009, 2010, 719, 2013, 2014, 721, 2017, 2018, 
       723, 1762, 885, 545, 1727, 675, 840, 839, 510, 1906, 806, 1904, 803, 
       649, 484, 1881, 771, 1879, 483, 1673, 769, 1878, 633, 1877, 1876, 768, 
       1672, 482, 1670}], 
      Line3DBox[{642, 790, 1889, 498, 825, 1711, 666, 1707, 822, 1915, 530, 
       1741, 872, 1984, 874, 558, 870, 560, 590, 1786, 1787, 592, 1790, 1791, 
       594, 1795, 1796, 1797, 596, 1800, 1801, 598, 1804, 1805, 600, 1808, 
       1809, 602, 575, 882, 572, 879, 1761, 877, 1989, 534, 1921, 832, 1715, 
       669, 1714, 828, 502, 1898, 794, 645, 1690, 1689, 643, 1688, 1687, 1686,
        642}], Line3DBox[{1699, 817, 662, 1700, 1701, 1702, 663, 1703, 1704, 
       664, 818, 1705, 525, 863, 1739, 706, 1740, 866, 1982, 868, 556, 1850, 
       1849, 736, 900, 1782, 1781, 586, 1778, 1777, 585, 1776, 1775, 1774, 
       584, 2030, 2029, 896, 583, 1847, 1846, 550, 855, 1972, 853, 1732, 701, 
       1734, 857, 521, 1699}], 
      Line3DBox[{1710, 826, 1917, 531, 1914, 529, 871, 1983, 873, 557, 869, 
       559, 589, 1784, 1785, 591, 1788, 1789, 593, 1792, 1793, 1794, 595, 
       1798, 1799, 597, 1802, 1803, 599, 1806, 1807, 601, 574, 881, 571, 878, 
       1760, 876, 533, 1920, 532, 1919, 829, 1713, 827, 668, 1712, 501, 1897, 
       500, 1894, 1893, 499, 1918, 667, 824, 1710}], 
      Line3DBox[{1730, 851, 1970, 700, 852, 1731, 548, 2024, 729, 2025, 890, 
       1771, 731, 1772, 892, 579, 1827, 610, 1826, 1825, 609, 1823, 1822, 607,
        1819, 1818, 1817, 605, 1813, 1812, 603, 1810, 576, 887, 2021, 725, 
       1764, 888, 2022, 726, 2023, 547, 1730}], 
      Line3DBox[{1733, 858, 1974, 702, 1971, 854, 549, 1845, 582, 895, 2027, 
       2028, 897, 732, 2031, 2032, 2033, 733, 2034, 2035, 734, 901, 1779, 
       1780, 899, 735, 1848, 555, 867, 1981, 707, 1980, 864, 1738, 862, 705, 
       1977, 524, 1913, 522, 1912, 1911, 523, 1975, 703, 856, 1733}], 
      Line3DBox[{1735, 860, 1976, 552, 1973, 859, 551, 1773, 894, 580, 893, 
       2026, 581, 1828, 611, 1829, 1830, 612, 1831, 1832, 1833, 613, 1834, 
       1835, 614, 1836, 1837, 615, 1838, 588, 1783, 902, 587, 898, 2036, 554, 
       865, 1979, 553, 1978, 861, 1737, 704, 1736, 1735}], 
      Line3DBox[{1763, 889, 577, 1811, 604, 1814, 1815, 1816, 606, 1820, 1821,
        608, 1824, 578, 891, 1770, 730, 1769, 1768, 728, 1767, 1766, 1765, 
       727, 1763}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0C9IQ2EcheHfuJvCbIKKCIJJEAS7RRQGahMGYtQwWdgwbywbBcGBIpYL
RpkGLQOraFK0CGtjzVmEJfG5GA7nPe93/3EX9us7tVxElKWTjzgciyjI6njE
RRLR5R4lxZ+6l238q3MFDi/pZfnBIynjc/e3ZRdf6jnXP3juvD7hPrg3OcUb
3LuzV2nZJTtxFtK1K/aXszs85Kr2om7qWT0te/jaed91qR5wK1wl+7bs3fa2
s5p9jye4NZxyV3gTt/iB75/CZ/ykPuBeuBl7Cz/hY/ztnlu8zhXtI3nmbrgG
bif///MP1isvEg==
       "]], Line3DBox[CompressedData["
1:eJwl0LErhHEcx/Hv485dZoVEl00pf4GUUjfYpCvZ5OqkPLFY7rIYrEq5urI9
ZRQWyxWLkpuI5UoWi4FJmXg9GT593p/P9/v79XueqfV0eTuJiBpdFCM2SxEl
mitHHMiH1KUbygoRff6aZ/zLBwZ1eIbP0jf+oRruuKNNq/iUT9i/dneFH+le
dE90jBd1z2aPtC9X5aJZQl25IX+aXeEv3ZY8zVt8nI/SGj4zf7eX5W+hW9zI
32a2w+/klH/QnjMLPNPN8yE7b7yuH+En+mG+Ifd805i8hO/xJF7Bl7jnXCrv
0gM+1zVxu/D/T/8ADOswbw==
       "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/E353w7s3IS3Y1X6v4CRJTBdIWS6QZFF5fJdBkYrEpRyvYt
o1+L5eomdWWis1xdFouBSZk8LsOz16/v59P3+y1W9yq7AxGxhruhiJ3hiAQz
ScSxfIImWkgzEV3a62c+shEZdPlpWsYP/4t1/tIdF9jgr+ikc4/uLtBT3Zvu
FWf8kq5je8GhvCxnbYNoytvyl+2B/9bV5BJt0AmaxyZ/bf/wXNp/Fyzyt7ay
bV9+kuv0Ewf6BZrq5uiIZ97pln6MnutHaQdH/DhWbG3fN8Wv8vf8s3N1OYd5
3Y2u7cxs8v9P/wD7/y6+
       "]], Line3DBox[{924, 921, 935, 924}], Line3DBox[{922, 925, 936, 922}], 
      Line3DBox[CompressedData["
1:eJwl0C1LQ2EYxvFb3I6CrIsMYdhMvnyABTWMaTGsDItFRHRBi0GGRb+BaBsy
GBtGncEiiEEQ81QQZGXBMqsI/g6GP9fL/Tz3eTiFzdr63khEVNDNROwkEde0
OBZxQk/xgEe0RyM+aT/t+Ew2IsEHP0cX8MP/ospf2tHABt+kBffu7J+hZ7p3
3SvO+ZLuzayHY7ksj5sluJd35aFZl//W1eRZWqfTNJ9+h78yHzjXoYvpO/kV
zPOr9An7Zjn50J1lvqVbog3dwNu39VPyhX6Sbsk9+mW+xr84M+Qr/C2fS3fi
ABO40R3R5+z/P/0DDZIwPw==
       "]], Line3DBox[CompressedData["
1:eJwl0LErhHEcx/GveDyp+wckXWS7yfkHlBgu3aBsMpgMOga3SjZ/gRjUJSW6
snDIoi6bbj6ulDOc4RYWg+T1ZPj0eX8+n9/veXqeibXNpcpARCxTYyhiYzji
is+mEceDEU38SOf4jb9TEydJREqveJrP0A/+pRV84n6NVvEpn3Tv3rOn+IGu
o3umQ1zSvdjatCcvyiO2lB7kivxpa+Av3ZZc4Ls8z8ez9+C6/cO5C97TffMF
uWi7k6vyNt3iPp+nM3vOXsKXuMvH6AiP8nVn27zvTBm3fN++LU83eC7rbNXs
OXSt2+FPyf///AN1BzHg
       "]], Line3DBox[{928, 927, 939, 928}], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/H3xXFdovwFvoNuwaTLYjZdXymZ9M2NV0jKqus2yh+A5ZYL
XcqmdIsSGeT282ORziqze8jw7PXr+/18+n6T6vbKVi4iVlEYidjE9XDEIe7x
gPZQxAf9xB1fyEcU8c7P0zJ++Zw9489GI1rY4C/otL7j3BI91r3pXnDKV3Sv
th4aciqP2Yq4lXflH9s3MuzIM7Y6TegUMn7d9oVL7/R1bV0Zy7obOaWPqGBC
f04X0OSv6CL6vqHm2Tn+BLN41qW6Lk3ktb876QG67hqnezhyzj6dxJJnnvL/
/3MAKlwtJQ==
       "]], Line3DBox[CompressedData["
1:eJwl0D1LAmAYheEnMusHBBEE4lA0tLYF0iLVpg4FbopTUKtIzUKkIGI0NfgD
ChcXobGxtCWiNVqiINxCpEsabs7Hc4aXN106zZ/MRUQOF4mIAbrzES/0Fff8
L53MMr+xELGJH36MHN9ejGihwHfoim0/GbFKL3Uj3ROafEY3dHvEmbwrT/kJ
BnJZ/rL9RE+uyOt8jS7TQ1q0fUfX/Wi257fpAe3b7NMHHLsv6W9wrt/R3WFP
/+HtJd2W3MG1TUr/hoJ+TVfHtz4v39o3+GdU9TWM+KzblVsi+f9/f87ZL9c=

       "]], Line3DBox[CompressedData["
1:eJwl0M8rw3Ecx/G3vmNnSWlOLoQ/QUpq5Wpx4EbiYttZa6fVTqTW+Ae+d0lJ
aeXksosfB2knpXaQKO22Fo/l8Oz16335fGZ2y4XSSERs4jYT0UKaRLzSDu74
Ph0MMz83GjGPH76HAt/MRjSwwZ/TKbc3YxE5eqJ71j3ilF/RPdkeUJVX5V9+
gJa8J3+5/cSVvC/P8hU6SScQblPbO91GV7dl7+uKuJYP6b1tDR98Spdp1t0F
v4Q3ecftIt/EAl50Ndpw9406P4314RtsbV1JPqZHdBx5W9uW8Ae4tJ0l///5
B44mMtM=
       "]], Line3DBox[CompressedData["
1:eJwl0L1LglEYxuHHMiPEFh0bsiFaGqOtOQgkmwoaxDUoiKixD9r6E9ShKUIk
aBOiJQjEIbC5LAiRgoaUpoauaPhxf533wHvy5Z217UREFHGUijhGFsvjEQ9j
Ec1kxPloRIs2aI/2cc9P2NN45RfoIsI2ghJ/6Y4LlPk6ndXfunuOVnQvumfU
+IKua3vCqbwqZ2xp3Ml78rdtiBJ25XnbCZ2hCd2Vcx90Ew39UP+jO8ANv0/b
tgI++UlnDvUr/LVuCW/8lm6KVuV3/zbNP9IN/cA36/SLntk7f29ky6X+3+8X
VpUuSg==
       "]], 
      Line3DBox[{1558, 1666, 1557, 1168, 1257, 1258, 967, 1292, 1294, 994, 
       1336, 1338, 1029, 1027, 1379, 1966, 1964, 1381, 1968, 1067, 1927, 1065,
        1438, 2019, 2017, 1440, 1107, 1992, 1990, 1414, 1105, 1808, 1806, 
       1476, 1143, 1480, 1849, 1848, 1079, 1618, 1981, 1617, 1740, 1193, 1413,
        1041, 1920, 1601, 1715, 1716, 1599, 1509, 1900, 1309, 1177, 1904, 
       1586, 980, 1882, 1570, 1676, 1173, 1574, 1680, 1492, 1865, 1558}], 
      Line3DBox[{955, 1236, 1238, 957, 1271, 1273, 984, 1315, 1317, 1006, 
       1008, 1358, 1934, 1932, 1360, 1936, 1044, 1926, 1046, 1417, 1998, 1996,
        1419, 1084, 1988, 1986, 1403, 1086, 1787, 1785, 1466, 1142, 1479, 
       1847, 1845, 1529, 1386, 1971, 1385, 1732, 1191, 1400, 1520, 1914, 1351,
        1707, 1708, 1593, 1503, 1683, 1297, 997, 1694, 1583, 1498, 1872, 1562,
        1669, 1171, 1572, 1884, 1491, 1860, 1551, 1655, 1232, 955}], 
      Line3DBox[{1169, 1259, 968, 1293, 1295, 995, 1337, 1339, 1030, 1028, 
       1380, 1967, 1965, 1382, 1969, 1068, 1928, 1066, 1439, 2020, 2018, 1441,
        1108, 1993, 1991, 1415, 1106, 1809, 1807, 1477, 1144, 1481, 1850, 
       1533, 1619, 1982, 1080, 1622, 1760, 1761, 1621, 1989, 1522, 1921, 1922,
        1356, 1717, 1600, 1187, 1003, 1906, 1588, 1905, 1587, 1696, 1500, 981,
        1576, 1886, 1887, 1575, 1681, 1493, 1235, 1169}], 
      Line3DBox[{1268, 1678, 1679, 1573, 1885, 954, 1552, 1167, 1237, 956, 
       1270, 1272, 983, 1314, 1316, 1005, 1007, 1357, 1933, 1931, 1359, 1935, 
       1043, 1925, 1045, 1416, 1997, 1995, 1418, 1083, 1987, 1985, 1402, 1085,
        1786, 1784, 1465, 1141, 1478, 1846, 1530, 1607, 1972, 1192, 1401, 
       1983, 1984, 1620, 1741, 1521, 1915, 1916, 1594, 1709, 1350, 1040, 1511,
        1903, 1585, 1695, 1584, 1902, 978, 1172, 1268}], 
      Line3DBox[{1577, 1682, 1175, 1296, 996, 1340, 1181, 1840, 1634, 2038, 
       1502, 1888, 1577}], 
      Line3DBox[{1310, 1693, 1178, 1908, 1590, 1909, 1512, 1602, 1930, 1929, 
       1188, 1841, 1635, 2039, 1510, 1901, 1310}], 
      Line3DBox[{1179, 1697, 1589, 1907, 1004, 2040, 1636, 1842, 1189, 1728, 
       1729, 1603, 1513, 1910, 1591, 1698, 1179}], 
      Line3DBox[{982, 1313, 1180, 1839, 1633, 2037, 1501, 1883, 1571, 1677, 
       1174, 1269, 982}], 
      Line3DBox[{1519, 1706, 1186, 1924, 1524, 1623, 1994, 1194, 1843, 1637, 
       1519}], 
      Line3DBox[{1042, 1727, 1525, 1624, 1762, 1195, 1844, 1638, 1523, 1923, 
       1042}], Line3DBox[{1190, 1076, 1121, 1534, 1190}], 
      Line3DBox[{1082, 1109, 1199, 1081, 1082}], 
      Line3DBox[{1198, 1772, 1630, 1120, 1827, 1155, 1838, 1538, 1783, 1464, 
       1198}], Line3DBox[{1456, 1110, 2021, 1625, 1535, 1810, 1145, 1828, 
       1122, 2026, 1456}]}}},
   VertexNormals->CompressedData["
1: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
vXO/hdiuxjrTDf/6bKuH3Mk4+oIbi089i+q6IYQnah//+32oUNhlkXz/2cIq
+1VRh/8swyimxb/fHxl+1Uhc8cy00F6oqjsgd67w12Ldv/iXlKdfLMmjhTPp
NxYCnacLO6eH/sUz7vlEcra0FZJqlNS3nBovPL/tf37771pl04BbrfC6UlRt
nasQ9pj+b92T6jrNhQGz6pNaLyTU76zGg+zr/q3zksfBI8rB3PCyUT4n6eZ0
4bqJ/+Wf4FEwXtXaph43Nb1asHau8GLZ/+qx71aIKOgYVX993WK+jrQdd83u
/Je3zSei75SwtoCCWU+f+GoVbMo/m/cP3suhd9a4XAVqxDZk0A+K4OyE5r+8
udtuY562EgNn2htjLcuNxPkpn/wHv+ypUT1N3wxOVVUrj2jTUOC87APrukHw
2FbHf1ywHw6+M+5BexIqjvZuP7GDAZvedDqeTKYAt3fX0Qs3BlDx0O8Xn162
Q04areX5jyEgk6JTDPqoKCa4iqd7BxPHZT87cDqlwYW74k6rljfjS0Wu6cxv
DGSyc+/yty2Cn5tDw5vMW7D14o7Gt44T+JiN7+MuDgqWHDjDTX3SjDm7R9Lt
7Yi5yH9J9y3ZGuTiviv1IKkZt/KWHW6uZKCHz73Rw6XFeK31Oq/2q2aM4FC8
aM7HRN21i40BpHSQPJtnxn+qBW2WzH6TcJ7Azoh448fzZFDTEd9nzWxGyFrh
ue7TBKrTlSc8hMiw0oFXZyehw4Yczw6tqx7C5dINnhe+DeGZa/LF/YerUEMn
xLFh1xjsqy/PlC/tx1Ma4zfm7nagR/7zrsKeESj6utyRLZOGH0r0FiSVKlD2
YOIbm1wm3KDy+O5frMXi9SPUo0KlWHhf1TtzJQv4hE8lvROqQi7la1uEtqQg
vxZr/9JOFihrN06XrMjEfePtxhn3xwpncwr/PT8tkWHxrk1iyCkZsLAcJ9Xf
2N3+95yMRZqH8T7mxMUGrpQsCSFQXhD+9xwufHoR9jqaB3n47cqslMXgeHjp
v3nYQ7+0BsvNFv7NJ/9v+N987//mq/83/L/66v9Xv/2/4UpmJq5NjZPq9Lr/
8fZR7Sev411OcBhMmBxLHit0P5X/b/zDIB/jB11iYLjPf/S0qhiIiv2PN4FZ
GYfMNbPqo5srlmuJC4Fh3v94ThLkwO5EHhA76VKcOFyGHGunRqN7mZA2O3Pt
iEUNCGpILLnE3YEcZdzJ2fKjMLG9R3OPAw2Uiyu39VUkI0fi4MkRYt9bIMY9
h5oBmdt2XclbUoozjvov+gVZMD0qfzKJswoeKgivPH+1ChPkdWv61MdA+zvd
SDq9HyjtO7oObSbjQf4Tu/cZ0XHgs1cUdaITue6XDgsJUXFylJE4KcPEnAnr
DxNBhVglcLhWdC0V9Zd3iocbMvGEdKrQwIcUdFN8nJQgTMW8hfCz9y4TeP3A
uu9rBDAwqYxtZS0FLy9Ge4XsZOKNq5FSp94Wolem4cGROgqG7j/28c15JtaU
/VnWmpKCa5uzSAH5FFR6kBeXf52JZQu7P/8KE8c/D68ZX1lDxZOB3/oriHW/
HdR4ce9tCuy6EOlfvZKKArs/t+7ZxMSiwRin6IBCuLg3LiWLWHflmcWmLiL/
scGq3vfhKbDA97G3toqCutHcs+yKTKwq53qjFVoI9unZXZnnqXioaMFk50kG
Xr1klRC3vhEOBr4+eVOejBfLeeKaCH5ONryZpQ51wr2oLaT9Svko5WktdKaE
jOqFCot8lky0UM7vZ1+kovHV2nuJKxn41SPFxDC8Ccfi49vlOJpxr2Wtu4UA
A8/+KXKEmCboof/cyDv0FSr6tM9zf6fD7Z3H5gZv9+DxifaQtmeZ4GhVtsnw
K3GPvHiSla2Vh2LrLMza89Pg8c/E4rkOFgzY6VsMRqdj1YutejdaGuBFUZaK
vzQDBBgB2ar3m/F+0inmcs8a2N69gp7lw4S4ozKlWfRalDv3xyNubwq4pu/3
55xgwZIllzhPCsWiouG8ZZd5Kkxl+JGcWSzQawsL5YcA7NvgEnGkqRKiL/LF
7VNhgXaUruUv4ULEdv3FsIIqyDC5QUs7y4Jm3y0fGWpJf/W93/gX/G8+9n/z
yS/4C/5fffL/q3/+33CFTpESXdNUSCheudKFyGM0eyjhmU4ArFHa9/z1zhRY
6XILftFZcED4zutRxVhwpPmvpudVAVvR63UFBG93Nv2ZdtFJgmcx8oE6NZUg
u9PNpEaZBceLqWsSDxWC3UHRIZmUNIgKXPdtnNj3C6lbRO9kp8Mf9yMnuG5l
QrFUwV1h4pws21hX5mKdBxnWlwYrrWrgbffP3A5i34c0Tt9fzlEHPvefpN7L
JPTs0MOG7xsY8K7MwMPuVTOEf3/G1ZPwFcqS5T3iF+nw9YrEaR3DHhDY1VGn
tUhGYehYCF/PRGddo6oXj8vQrNZBo2iUjNJsHT2VhJ49t5mkZ/blE1b37ysx
yCHj3pYot9w3THS5ZPyD1iOIsj9KfTCQjGeXbJzXcmDi5QsXjbk+5WFvxVuu
lXfI2LdUzasqhIkDT7Z3Tn9Jwq38hT/vGJJxen+N35GPRB/QaZKd/DJbOGPL
HntgiIyZYkPrLvoysXN0NO4VoaPdThqndbqS8fsuhwbpUCbWx99NVUpPAlkZ
n+K4l2QMfByuP0msa35wlnPfxzx4s6uNY1cKCWMOm/1YbTmA86t961f0juCh
uodX625T0HzHrXfcueN47XPJRJBhN2adzq3zK6dgQOnt63J+DHxzn2H77U8d
hosZaBnJUzCYLX9J4XEmjomurjhiXoC6r0VURrdQUEXFRSDWgImFO6Relp4r
gMkq74yKCxT0Vn2WujqHgafMKFE61rVgdDwtS3cDCW23f3h0kn0A+ywVGLra
oyBQqftDsrUVuI6ntXaYj8PR5sm0VcadaJtg+vlLcxckNZQfNZemQ9e8S+bn
dhJ+ylh4/j6yDzq3+mzae3EIPt74eLB9CQ0zaXZH7rbTYLlom85SzTGwerKH
7/h+Kn6WY6plFPfCdtnNsxvM6dB74EFw+b5SzDi9RsHwVy+oe6YZbo0hzsMU
R6fPtXS8ElVaDoxe6DTY1qR7mA6fbMUDE7XKsIH+mGOahwaH9mtNa76mw6o7
q562WmT81d9+5V/wv/nb/82v/m/43/zw/5Zf6C/1/C3P39YdYfd5UEzwFvRm
JJ6T4M0kTs2kwjEd7uxLLegheOY5ORw5bUqHW6xVs85GhH5aVtwHvDRYuuP+
TSWCt6apzfO0MxmwSptpt4vZC83XqW/NDtHBp/B3QohxGcTfSl1b3NMFBeOK
Tiul6FD/SmPN1l4SlOaFf3jX2QpOjofsXp8ZB8Hno+HXLTvh/hQjRY9CA7op
2WlYZwzCnjC7XLdQ4YHH/neTr/sgwdOVw9R6CAaNBlkp7DTwvymVTaI1Ye/z
od5NRUx0CDIHEacsrJbOSXDIb0JzrU0+DzqZWPB6UvO2UxzWavMbeq+rQK2M
sNOGuuPYPbl942rLPvzO2yne+yQT1L4fW8JdO4H8U32knPudqFgavIxlScL6
1IL6oVVM7GWboyfsq8Hz9wo4flZVo9KsuXhSGhMfDWcoFN2pxoXtykq39+bg
KeqtexcXGeg9df78Gudm7Ft+LGFhNRlpn6e51Yj+Y+NyxCTZLBeF1bP8VnGR
ccbhnqQo0Tf25DXNW1omIue6+ym0YRLyKFyVXsxhotT7R5Klfd/V2zZTlOKe
kdBvTbupVz4T1XUu1n07nYCD6y3yR8xJqLPM7mVUHRMP3maofDOeU3ciu+wX
5yTj64Obr6kS+efsM82PWibCaziyVFuMjMxL/B98iHoqv51waTyXC6Ethol1
CSRM51Gx8nrHxAnT+rMpR3NAd++cWK1zHhqRxnkv7GOi97nleXa9FBAff/x7
Y2E6yIc0Cxt0TGCDVNSZ34adwBc6dS36WyX+1r10SH7/GKoGF0rwFPXjyXdi
EotBJLwxVGeGVn3IT8hEiYtjqMEhlxzzrB7qFLrUXokOw2a+bTeLp4aQU7yK
pT/aAd/IJEktozGwbvwG2626sDXgQTY1jAZlb41V710dB81XCrzhunUYNS/R
U3eZBio58WQZPTqsn9vWylHw9f+av/1/xRdyxKw4LWjwzENvpT9Rz4LqvU+3
Q7+CpNS6LIigwU+/o/kv7Mah+BuH/p6jdSAH3lwqE5VYaWIfz68xhjY2ztmk
r/1wg29ZgNGmTjCxfB4pajwGrZfKTae2dIGYaH4H72g91IqeOX9fcBje2tgn
8bCGIL40TESrpBlOpWhvv/ZuHBR0hi7/XNeFs6MXvu/S6AK5858dwtbS4cOl
edu8MTKGrvU9K76tH6QyCq0OXu+Hdb2MC5KkfnSgNZkNPuoD0aDX15Z9HIGn
+oubPZa3o8rhSkNNon8uNVu5/9kOOmyUbKZIqZdj8L7dIYrCNHBb+rrT1Z8O
Ew56cm1HMpEn6sn0eg8aWJ9y0xV+NQ7b94tE3Z6vQaUXRWaNhjQYoZrSs84R
vMk+aPnzNOevvvr/Ff+bT/5/xf9fr/u4/2ulD8GbyXb2ZheCt53VKnqKezLB
jI07h0nwnK4v4pAmR4fzgSWz17TLYfSFrZfASRr4aDuc4SL681ScjBvFNgfe
33Jis/GkgcZTlaL1geOw9GyKK32xBtb/CtVaeqILyh69N/VdTYes6Sedj8bI
sOXYrkfb6pvB38b59bpgog8HLuO1lO8Czgjtfc89+8DbQfzwnawRiJsVYUmx
2oBy+eebXdL9oMIP56vu9MMiR/Aqh4Z+GFaTZTofISHIap1I3taJTW6ah/cn
0NFnoqOemZgDOc1rndOAhTse0hMpCVV42q5712HJdOS1fHdUtpmFR6XvW3mX
Z6LX9NP2kffJ+EJudYT0BAth8KhKbFksyu+xvay75CPGPtdjqvxgoSj/oxNB
PsIg9qh7LvZGCdR8PkufC2bhsSuF97/8SUf9H/uTdKvL4OCD16nSL1mYmXRq
ctfvaNQsvfwtZFUl+N3a9i76Dgtf5W40XuorAhb1JzvePEvGejaTz/uIdVNL
DT06KmJhJ9+hZ/3c6bjhyPOZK0Sdmg4RfGcKM+Gj+SkTeyK/0z6moCSR/8CF
jWF6S2NA4dtSdbHrJfAqwWyJZAgLjQ7EUXp+p0P71lK9meZKrEv6QcqvHUf9
yD+8Ss5En7IyEX1/6D28S5XxtVJgovxN88mLq5tB5ZzzsHJgDcx764px6VLA
cX3Lqd5KBmpLX3dULSbBzOxFp/Rj4zB16vXKkM5efOb05Nfvug4YUdl6uV+X
Dp3G0rSROQpqbxDbisRzF1er8eLLSjr03XRJ++FejL+1TBn+R2kw8Xr7o9su
dNhvtnLnnF86vq3j6DpMnM+zP9+KGRHn84zck4lzb+Rw0VRN7fgxGvBE7jLY
RMT7N5dqvfJJh/Kfha3hXjQQ7lK4eFWADhbxv2LaPYuBQ2mvW/zOGvihsa5q
hSEFbmcbfP1ZywDLu6fHnW3GQNnFWvYlKwvWRg+STx8cwPgtAqWL3mOQaNAa
XOzaCdePOYZYbenEa81HV8aHDcNDFSNB1/VDsPHxH/EFgyZkZIbO+t0agNas
LfTphFHoOpx2n/N4FRYdRwElVxrMPZ0p99hKB/Y39yc79yJGxRhZTR2kQcnW
TNdAd+L5Ej/8k+tUKpKVxFbfWOwFy927nsQS73c8Y9nlRq+tSPp4OPjdIRps
6utJO0zE87B+NNhrpkJ2nV4S7RYNqsBN6NwWOhgLvqTIaSCEsS9f7XV9AKTO
ln/bkTIKl7RDhe8YVUHnrOBZ23/+77b4+uXzMkOwuHmZm/TZJvAP2yRj6TQG
x/VMRSu4u+DiKQHuyPYO4FxkfyBoNwaDH0afKsrnQE2f55PrewZAZiOv/OWU
MfgUsqvQWzkX7cgCdm0N/RgmKlE2/3MclJvoLs7xJDhlmM9vENCNFuIz7kgf
h69RpydfmZKhwk6lL9aoG/AUV/bzvDEg39qDAS+/4DGSXNpITT8wgzdZXr3d
ivlvrOorKicwfofye5pLA85eqpA8fKIVdy87fVOmnoEflD1ZwdyD6vfK5w/0
urVilVg+25EPDOR6am7pp5sF0lNLN6y514pRtqL5J48yUEloFe8mtXJYSV3Y
Yk/Eu9sX1kdUTCCP6sYkOY8GKNqCVhsutaJuqHHomOQEmspf2aKRTIHN4jcC
nh9swTtRllc2HGcgw/Bq/oov1TjaIOEord6C3JxdUELgh4qvPu3KrYbM9nN8
Xvdb8MlExtWgtgnMXC1RMyDXBFh84rO5bh/K6te+vT4/gDm/JT7u4OtHpwH/
Z1wH+vDiRfWUjwKD2Hmu7WXWkn7oWX3iw32HIVzU+H57lhqBS9oMJzVxBDwC
b5vkFlDxSRd/tFwsA0svvC1PTKlCX4ErozOELnlbUBdXZ8rE9qxY0SuxnPjM
y01EW4OIPzctlXCMiexLH1qkBqfArMvwi7VKVBRUhh9phD4NZokUZ70shLi0
V4vqOlT8XXDLksVLx2+kfQdjX3biz3OdwrTnzbjstOa+0y0T+Hr3DbsXt0n4
5IlQ2aA4CUvH5oclSkeQUq21Y1/8ABzssqodxFdwewfXEMuzBVMOj+8XnGag
etKKY26KgbDJXY+emdSCJTN2hxzpDPB3vP7hXhYJNTmWqsE//4OgtMzx6VQH
3qVE898roeBxxwPWS8f/4Vn5uKprBepajrC2B1FQS1O/tNSaiXKXW/9oZaXg
pbm6yK33KbhW2/ddlRsTeZwDQ4xtpFByTJq6N5iCv58J3zxDzI3RSzaa6r8r
hKs5y5+IjVLwdHX5rk5PBnYpKDAeuNZDhjIv3+xXQhf2CERExdGRtcJPnTHW
Aed9gsyz18TAuk8eO3Z40/CN34YbUhZ0Yn9mTQ3DS/HRr603fgyO4PYTP29c
yx5Eoz28H7zsauGIrS/b7kcDwHfn4YPlNqO4fdnG4LXHa8G8M+eXid8AdHw1
d/W1GIW2paHsAsfI2LhvonfjUWI+TzJ7u35jKZ5qlzZbIkxGwfeGpD8fmJh/
SpB5JTwRdRIjTY1niPtuFI8MZDNxWVdqetP57+ovt+17St9IzPMr37lxezHR
bnHN9GxgLqz/rEDfYEPGgisrgjSXMpHfa+Hp3uIquL+JtO38ybuQIsJVX/i4
D0lfZ819y8axNuEqS/5MOXr82l3c2DSG99oOPP0h3Y93CzIu/0z9hPd47t+S
kBzDyg367tuKBtCvgVW9zSIZLxrfET0lNYZcxgLc3HkDUGa3xG136A1ores5
NBbWh75pHbMXvozDDQN/drb+CqjY2r476TUNWFM5DL3icWwwPnmlN78CON1F
XfLDadDMbaCwsYiYC46lOs4/bsITm75z/OxnYpiiTcSBD+8xayFcseReEw6K
rjrvQWdinXmqSqqDIMiqda/u8iLwA6/T5BuZ+M1xMG7D28+QV6wk8rDlKygJ
qtat52Hgt7gvdm6SHch+znWFEC0aih/wgcFxJpY9vx+5zIGKvcdbFwbHUvG3
qJKo4eQENgUGdNWxd6J+sFzC84xsOHm1KFjRfAJprZeym0W6IfusV+SN19HA
xmtH89Fn4qpYi6fpzlT49KZjeTB7CRYXcLt/OVuLRVFvQq6wmHjz4FHjHTF1
wNnPY8JzZBjV+W+nrmwZQv5YmojgzTLYNjw+t9qKhaOnNTw4E/Pw7qY/3wrc
iPPbjYuJtizMb2RY7RMshWcTfoLxP1rAsuPItsen++DCox+H8g1H4TFnUpH4
vgHk+Ulz1J8cwkOjezdqHu9As8Yf7SyPYcz11jZ/adeOsdsP2Nb39ONhg9ng
A8p0FBt/WL6f0oynX5dvtYprR76OxORK4nxfEcXNl2QH0bDHf228Uy2uj0lS
Xf2gj9CH7TnLibnCQnnFGrk9B7A2ZuvzHfoDyMlZ41pIHkJppQs1C7c74DTP
zODQ3RY8uC55G3WGgS46rfxCAd/Vb7/rWeeg1IIrToTkfST62+7l3jdtRkqQ
Fkwvq05twXZf2+YUEgOtbcnR3q2ZkCgT2idcTPQROdK9rQ8Y2NayWnNpfSlI
/rAx+76jBY/EWPuaTjAwOb6ihX0mAx4/Nehlc2rBh7ZT7zZqMLDfMPZNq3AN
2Cyu+nl4Uz9eXI5Cxmf6kRw4ZyvK6MefMkznyfVDGFKm1rQfSmH48Lxv/vMR
PB6S87SYqxUlZ3p4XejEfeE1oFeYVo92QaKxhZyt+PJVwSEtAh9qC1VLzK6H
Ay99uM1VWvFgzOOaTRITuDmn6urXaQr8XsfTrDPcgkHSEg5+thN4VWSPhbwX
GTSuPB2WdRlCu2eLTSd4a5A3VFzXoHkY1h1ausFCrB/bDtYZaTv04wTz6uql
w/0Q3/0wlIO/GVPEAmyvfGPg+7e9bvE2RfhCzFPTs5+Kcvdym9/vYOKdWYx/
4ZyGG6JfDdVFUXGn8TK/JqLPiJA0t7XocyD5msUo9TYVZQIbtg32jqOhHGtw
QrALNXdr/BRY0YIf3cd0RPYx8ByZi7G+rRbFLm32PjLZjDWnbgoaJk3grtNa
SpIiZGxIrNbIfNWM19mfUY7yMXE6pmtBiZSOCo2WHUsuNWMhW+Qr+61MjN/o
fPJb0f+p7UujqW6jtxUSUSiUVKZKgzRoUNiFEoVCZMqQkqloQKTIWBKNyJSp
ZCbztInM4znHPJ1DOM5xDg0qDby/58P75b/Ws971rPX+v+51rb33vff9u+/r
WuvcZ49WVnKl71uR3oV/4s16qAS/jDnitkGjthpO92X3nVvejWJ/EzQ0D7Ow
kc9u6CupGbZ3efbsCepCT9EJ1wkH4h60G5N7saUJKr5tFawk8s/4tEV5kcbA
zQoeqUzeQRiqlPAfnqjDi1eqfO2iC9G/t2mHptkM5i3d28Kl2oOvDvqQ77tM
ocv21z5H143g+upHe3O4qNhHfbklj4eEejPH/XAPAytdz2s9PdSDAnZ83xLc
prCSJDmtzjsCZS0/5UdXUjFI6nBRzVoSXiTphz2WY0Ag708Ny4cdmPg4++DO
1nEMDJnycGaMww1bdwOZTfX44+mv5xdki9CziTdI2ngGIs/LOOy6T0G5p5dq
h/NZOLNyaLxgUwPKFB7/7LmGgh9nv7nJkFn4SMKRm3GgHtXv1alyWlBwdW+1
U6E+C0dYYWk7JdqRZNajYEf4yW+S+pJM+LlOTv1oJ9MAy/Z0776/moJFJRaL
Rwk/6ts/3508WA9XnR4byUj3oMWWnNZCVzoGLzOwKF5Pw8W794WOiXfjrq70
fc8u9yNfc1n2zXkGbhU5uLAptB6FhZZ1c3GOo5a6zATTbhJDNhokR27vQf51
r0jVXnQ0eqj50Y2PBhuYe2Iv7u/G7vVu0S+D+9E9260xkOCF4Z8uXrWpqser
kQqxd/nG8VZQZfucxSRsV49mWyeWIwcnb2XEJAmdDRpcE83Z4ASyCaYWyViT
fEXq5O9WeKzWv9dFZAbbtoZk/RFMwdaCQK8qRiuUOv/U+SEyA0kSqvPpP0hY
+FBMmiXJRoWqbtvPAbWgvTP3C18vGWX1g3iDohiYtBDq+CFoCH17Gy5rcnfi
d4rsyjPzo6hVeZ/mrk9HIYkzDlt8yHiwJ/fond8sPKFsV5Y/+RGnxJKYYXZk
nOp+URZbyMJ9kjpSbIdmnLp9c80XLzKmrvpjvPUPCzvnBLqX0z+CpYG8z7ka
Mhrqn317N4yFQwFfX9X9bQHLeYcxdRIZ09yMNMYSGXj0ROJXiv0Q5O8RovUl
d2JTrAbn0VtjaK34+WgHaRKu+H09bXKPjNtMDcsfEPflmYqvr2r3DMGy/azj
+m4k0I2DDQqEbt4p5br1zeYpFHHNlrxgR4IRrlSvyw9oYCtF40yTngJFcz8H
9/AO7Amr2zRMZ6Nf8uUir5qV8Cr9CMe2og60KeXafHCQjUPO/kr7XFJga1i/
bGJ3Bxout1mRXM3Gp9KOO3deKYDbMg6Lcr9voO3HH+oJ/gQ/Pxxny1nYi+mS
HkYVrQRPjPjJyjZio8xhPxfX0hrMuXOoaodmGQp8dl2zguBjDr/li7aNk7Fr
2Uhw/IY8+CR1+F4bwZ+vR6evsjccQIXJqKNbszvxoTv9t98rNp7se6QycKYY
zT/t6dYK7kTxx3IXFsvZ+G3HxsBRw1R4fkAl9GZTJ4aGHRDUMybiBl1yWiys
ATN5v6ntlp24LPeS+bq1bPz++5Le2N4mqCwNguKuRjzye3iwOYewi8iyzjs0
Qk+p/Ls8k2I8kh1hLb2UjeeszmSdsuoC40CX8cIVdRgTsu7RPSMGtl7mkY4+
SwP1svbJq5ffw4WlT6pLCf3izXnlvcjjAVib1/837YAHjq/nFHhO8MzTgdsz
jWp7QfDwmyx1iMN5EaV4thAdbb+t7k8XHMfftjIzhSPxKLZNUL5GlI5b0pS+
hPCNQ4pv+XHNW5142rS4/ag3DWn2XINrjaZgr4rAjmNazUCStfcKfTIMnPKJ
JmtOMNGq5ppzt3QzZBzIFt0aPQxmERlhDceZUCNp/95lQxmcvWS5JEiQhl9H
HLjcBhiol+Qyd3muHrcH8IsYlzJwf31JzdMQKnqd1tkskJoMmwImeLIU2Oho
vLb/mEgXyrbQaf3HOrGg8/q+KKsBjK4xXbgTzYRRtdd5vJHFkBdROnb56Axe
WvXQUDS+AfikZBKT5UthjY2s4x1ZGpZumDB2IzFAyqTzecenfnC60ajJd4IJ
Y5/2lAyxyVCaf/txTGcnfN9feXXJCQbEbs6SURwfgeX8yVon7iIM1ERMtNxw
xujhwsTi6hlUNk5c58WD4FjKDpC2uotJH39NWNbMwMZtf6+7JtfCawtrl7aJ
LlyZLmW/I56Fl+PbK25erQWBZfv12au7MTtWvUEqigVrdpi9HJfLBtN6D3Nm
+DC2+RQI8/FP42dfD93zMlmw6msNb1HFMOYKp+nTOaZhDymk+0D/JCZ9cOJ+
azaEkpuWe4rODaPKro360vtGMePpdafEOTravPQINirowJAbVkc2OtCw4u1p
yYN+DIzRbNl3f7QKj8StVXuoRUXfcz7J90OYKHpno1KR+mZkmC3e+GNDwzT1
TovBYAbmv2Mqb26qAsdtjPIDcqP4PInXn4tjCs1fu9yofNMBCYsLbtyMSdR7
pdAjvTCIKeOBv40lRuB9uM15Xo9uPFPUklmlysJQP95rzmuasMPfIOzXrm5k
3OD4LE/wpb1b7z/t/JqHbXkr5l5u7kaHVivJUW42vtxbvj/E6KtqjezR3Mch
3ThZJdyjGMrCyg+/eXiu1yCn1LHHh2K68RsPt9uabhaxXuUx+xfvcdVkCV1e
gYjbR7eRIvxnNO734iL4WN65Fv5P0d345sTLNjkCv+M8748Pz97D2+vzJB3C
f8oNe7YJ4b9M06kz81oNyIXmkLRudCP/is+ut4GFjvH927rEmuCYWdtcSdoY
dtAuDnrYDaHfURUPwYBPuO/IZ6nPQj0ob/3Hqn7fNBaazn91DSVj3EGnTScW
utEz/Pd448w0tthVso2CWtG+UG1a+0APDnDdpt0Rm0YZ3wY1FicFF0xMJS5u
68HtfJ/tWm1YeMt72zu34Fp8qWz7g2bZg7IM/V/UDKIOHZHu27vzcZOUVv4Z
wq4wvHOBK5OFz6WESwLJ+dA5vFjhIdeDlSv96VIXWRieX1W7nLiPZkMT+Lx+
d6Ocdd4do9lp3P60Wd05qBUWG8Tq7Xl7UMJ4ciPrwDR66FY2GAaQIZFDOmBY
sQcv3JFJFiLy9Cp548rioUAea00eNXYMFT12ztk+H8IVHuTAQ76fwCm0Ndi3
nYIGKzbqNcWxkDUhuP1HXQM+Y2WR9TQpuPJ7Vv+kCRsvGyWW1NlzYf/SjKmT
URSEAJNRgw8MHJzCazEOgwg7VavvFnahdc+h6htmLIyMHLHvjmvC2eauu/xy
3dj8fPf41bBp3EYZnH/iQ8LHesZTW+O7kGNuzTKbZhYeOxu7ke91NaIw4/D5
uC78fG3zmvuE/fLUasnE19WgY6SQKkjwjW+MGbGo/Sw0viQfqTfVDM9TOGXN
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm], 
    FormBox["x", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{389.2223839603647, 471.3860651438133},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-2, 2}, {0, 2}, {-1.999, 1.9999}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.3094041898849087, 2.0106195599259746`, 2.704011470486902},
  ViewVertical->{0.1958114506852549, 0.9800762511782382, 
   0.03329290700655278}]], "Output",
 CellChangeTimes->{3.6953133384723997`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"RegionPlot3D", "[", 
      RowBox[{
       RowBox[{"expBoat", "[", "n", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1.999"}], ",", "1.9999"}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", ".25", "]"}]}]}], "]"}], ",", 
     RowBox[{"RegionPlot3D", "[", 
      RowBox[{
       RowBox[{"submergedRegion", "[", 
        RowBox[{"n", ",", 
         RowBox[{"D", "[", 
          RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", 
         RowBox[{"b", "/.", 
          RowBox[{"findB", "[", 
           RowBox[{"n", ",", 
            RowBox[{"D", "[", 
             RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1.999"}], ",", "1.9999"}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "1.5", ",", "2", ",", "2.5", ",", "3"}], "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6952541433069935`*^9, 3.6952542074083695`*^9}, {
  3.6952542428125086`*^9, 3.695254333816496*^9}, {3.6952544245427103`*^9, 
  3.6952544931591625`*^9}, {3.695254543175212*^9, 3.695254610163279*^9}, {
  3.6952546477915134`*^9, 3.6952546688555727`*^9}, {3.6952547153722205`*^9, 
  3.695254783277787*^9}, {3.695255136841736*^9, 3.6952551455207863`*^9}, {
  3.695314218957032*^9, 3.6953142265047774`*^9}, {3.695314258718311*^9, 
  3.6953142621163664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{"expBoat", "[", "1", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.999"}], ",", "1.9999"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Opacity", "[", ".25", "]"}]}]}], "]"}], ",", 
   RowBox[{"RegionPlot3D", "[", 
    RowBox[{
     RowBox[{"submergedRegion", "[", 
      RowBox[{"1", ",", 
       RowBox[{"D", "[", 
        RowBox[{"\[Pi]", "/", "6"}], "]"}], ",", 
       RowBox[{"b", "/.", 
        RowBox[{"findB", "[", 
         RowBox[{"1", ",", 
          RowBox[{"D", "[", 
           RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "\[IndentingNewLine]", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1.999"}], ",", "1.9999"}], "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695314280159427*^9, 3.6953142960563717`*^9}, {
  3.695314390127931*^9, 3.695314418055724*^9}}],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
    "], {
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.25], EdgeForm[None], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt1cdPVUEUx/F5uMYaFQUV7CQqVpqJ0lQEK80u8GyxUAQBo3GF2AAVFBR7
WassEDWxd/0z1NgLig000e/J/Baf3Ln3zcw9c+bMfVHBkqziEOfcbvRAACFq
H0MFtmItPxQgHwu5j8dUTMM8TMJcfluPDBQiHXOwAmuwEmmaZxZWYzmWIVNj
rP9i5spCNnKRgzxk6l3zUYoSxVaGcmzTuCUaG4NURCNF7TSLE+nIcH4tC7BI
zydjgs1LHKsUczHykKv1ZWuN1mcHygI+P7uwDjtRhUrUoxF7sF15CGKD7oPK
Q5VyW41yzVmBGs1TixbU6dqgts29V/PPUD5nKuepSEGO1mLx2x7NVv6TtUfW
Z4Sej0S8xiZgKUq1RzZPop6XKm8Z2pci5TYZCUjEFj0vxgPcx0O04C6a8AiP
8UR9TuE4bqEZjbiMK2h1vjbKVQOXcB4XcATXUY9neIrn2I99OIAGHNacFsMJ
nFSdN+u9FnMdgupvNbYZpxXbGZzFRZxDtc5OjWI4qnXVah6L5yra0O58jRSp
Tq4p5hta703cxgAMRBj6oyd66Rqqtp3R3s6f0wiEYwg2YaNirnT+/FYh3/mz
ZOeoAIVa4xREauwwTNR7bQ/jtY82j51BOyMHtRc1Wtch5TZGY+07MB7jnD9H
YzDW+TMYi+mIc/67Eau2xWDnzr4nd5yvjXvOfyuSVM9lyq3V0jvnc2d5G8xv
nVy/4TMGcf/F+RqOQHjA191P52vvl/M1Z/X2CW/xxvJNvziE4QX3H/HS8sv9
aPyj/d1yRPuH5Svg32X9++hdfdX+wO/vbb9ov9I8kbS7uP629dLup/42Z4fz
MVvN/nW+bl/b/gZ8bF+VF8tJN0bx/I/WPlxrtPNrsQ0N+DrqUC3ZWuz8tCrm
JPWxObuUt27lx9bVppy0K8+dWkuy3hWFaITC/iz+A736sXg=
          "]], Polygon3DBox[CompressedData["
1:eJxNlutvzmcYx+/feLpnrTqEVmbL5lBVWoeZQzI92JKVYBQJNTs4DH2YdsmI
adFH0cOGDZE4jM50bZ1e4H+QyCLLsmxzmPKC/QuTEHy/uT9iLz753c91X/d1
uq/7aketaVhS/0oIoVf0F+8mIUwTw8RQMViy0eIt0U9YNyWGhLg3XTozRKEo
8BnJisQYdIrFbFElxiKvEOXYtW4lMu9VysZMbFbw9e/h+BiC3mj8D8Ou7dj3
a9KZLCaJtLgl2av65oibWr8uRojhopCcU+QllfC++Ex8StxrxRditVgl1on1
yLyXERtFndiAnvc+FB+wtn41Mtd2OrVyjddzdg46l8Q90ScuYrMOG/adpzPv
iCkiN4m5V1HDInKdKMrIOU0tLPNennQGigJqly9GilFiEHVxfXKojddvilxk
7oO3qZX7IZdYXHPX/g30R1DrfPzlYaNUTAxRz/uz6Df33XtJjKOY+BzPCrFD
NIla8bHYicx7K8UuZN5bLhrFN2Ipd7lbZLnTWmw1olsin+NdR1Ek9krWRq3X
su7gHixrRWa9PeJz0YKPF31jX83iE2gmRse6HX2fW0Ye3eIX4mpi3UWMPYqp
V5wXR5OYZw9nfHakZMVinGsnfpbsjDglTosTolP8JE6GmKfz9QU+1qed/NrI
7VmI9mz3EXXsxM4W7J4hj23h5Rt1T5cnMddzIc4T53xFXMWP7aekUyomiP5J
rIX7/AI1vMyZVuqbQy/7jM86b7/jv6mT34bf39wQ31A5sbin3FsF9JPfift9
Aj1YIsaJshD7sZS9EtbuzUJ82Ndf3EkX6z/FWe7iFjE5Ns+owWIQb9x1/1Vc
o/7ujfPUyLUqQHcg8+C6ZL+FeI++v84knv/Dd5jEGl3ARhY7d8Tt/9W8l7h2
sr5NjD2c+4cz57B1F5n3ZofYw+5bz5UB8jmVmePZs0ws565d34zvXOwSdcyB
GrGIubNX7BNbxRZk3lvITLKtWma9bVbh22/FM819mognIfar41giFjN3prCu
wbdzTTPrnLNnaX4S8+gjz1xmlWuwhxgd29dJvOsUvel73qhvlhwz2BhALVw3
9/F8MYc36Ht66vtL4n1Zx7r2ad/u5Y/EAnq6lPV83oRrvZQcnes8flvuWdUt
uqjJ/RDr+pVoIIdO/Nr/Dfecvj+K0yKt38f0PS6+E9+KQ/y2/Adq4tqkqeVB
fY+Iw+KAaBVtolFsFx3Uz3Vsx+Y+ZB3E5Njqqa/v6kuxiTu7yRtPUfvD+GvH
z35ibBE7+B4i1t1JfDt+b//q7MMQ35FlXj8IUce633OPWdYHk5d9+yIv59NE
bfbjrxndA+j+x/16Tno+1pCL+8R97Z5eyB2XcY+byXkxcr+TDdz7A+K+wuzz
2Qw61vX/DNXMJs+rRfjK4Mf/R/nvoP+uzWI2uXf7JXFGVTMXy7CxibplsVPP
/fgd+m1X8vb8t7SC2Fzbq8RYwZ592ncD/VeLDc/yPmaKZ8tZ+tV9+3uIdWgh
BsfiWWd5N/38HICnCWA=
          "]], Polygon3DBox[CompressedData["
1:eJwt00tszUEUx/EZSsQrSqOVeF2RUhELC6JFlNAWGxdVFh5XKPFKkGq9Fi1R
t1wXkUhIizYhjVJBSbElKiIi1gTxfu26EXx/OWfxyf//nzn/MzNnZhKpXcmd
fUIIs9EPJajCKiQxE/kxhAKMwk++f+CzP/X9AF14jivE/OXZiyd4jb60/QvW
/gpH+U6jCQdQg1aPVf8zXMJZ2q/iHI6jEStpX4e1KEUxFmA+FmISitBK7Eue
L/AUPT7XX/iNhz7vjOaDI9iI9diKU8jiNLZhP/mO+RwasFtzoj3tsfqnGifQ
5HmVK6V+Yq/5WrSmDLI4j3bvU8wwjIxWb9X2E4bwXoTJmI7BeOw1aolWc9V5
KspQjgpMQy79wzEC3/n+FqyW7T522us6y2s5D4VI4CZu4BYavEaq5Vu8QYf2
Gl/w1XN34572gJxlKEcpEvhDe+TZFm1vejxe/2lu79CJj75una87uI1a7MUe
LMNyjMYYjFeNMBCNHq//7vreXGCs/t4/CBf5XoQKLPa6TvT6qE55GIr3Gofn
ZmzCDiSj3ZGcYDmVe4DOBtqCneEWn6/GylNONEcbd0Kwe6Y7NgNjvU8xucFy
K18VbauxBnMxx8c/hIOox/Zoa+zyc5z1c6g6au4ffO+0h/d9X7r9bJ7EFv4/
jDrUoho5mBJt/wqj3dvLvtfXUY86LPX4FDZgSbRzof0N0c6szsg4FCDfa6bu
FajBPs9V6XPXGnQnH+GM4nTXUYkSFEebf6efzYyv5T+gupHx
          "]], Polygon3DBox[CompressedData["
1:eJwt07lSFFEUxvHbBOQSUAiyjEKVBsoywCwBu5aIgFIQ6Ig4IxAgDAPoDG5v
oIGgoLI8BwQColjwKJLggqBo4P/U/YJfdVX37dvfPed0KDXZl85zzp1HPl5j
Hi/xAuNIYxKvMIcFLGIK9wPnZvEYTzCFO3ikNW+xjBXkkLFnyCKHu7iFs2hF
G9oRRQn+8E4F15DWFOMH98q5nkMlqnDCvV94j3d4o7NM4yGuYgwPdJYMrinb
J3zGLvawauvZM4lU4M+YULbbyjyEe+hAM3Z45xi/nc/8HR8xoRqmkEQbOtCH
m+jGdTQggih6cQP9GEAcdehU5h6tqcemvmU1+YmvWEej9qxFjdULZfpWlzK0
o1prvuFQNTzCNjb0rYx6bT3NKlsFwspgmWMIOd+7hGZgEP2IBX5P69Ff/FOt
reaDmplpzCCNgcCfpVgzcAansK/Z+6Bs2+qdzdhpnpeiLPCzYWc5wBfne2O9
2NJsLDk/e0/xDM8xrJ5uqaZWwzXn/wWbpRnNUlo97VLvIrzTpBloUYYiZY7q
7HGEUaA1NjOXcUUzbJlL2OsiLqnXVttS9c56dMH5f7QQRc7PnmUewSg6ted/
tx1paA==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.25], EdgeForm[None], 
      Specularity[
       GrayLevel[1], 3], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{7, 9, 413}, {208, 210, 421}, {12, 9, 7}, {212, 206, 
          204}, {417, 206, 253}, {413, 9, 18}, {258, 210, 208}, {425, 406, 
          407}, {9, 12, 18}, {410, 406, 404}, {210, 258, 225}, {204, 206, 
          417}, {206, 212, 253}, {404, 406, 425}, {406, 410, 407}, {421, 210, 
          225}}], Polygon3DBox[{{425, 407, 410, 404}, {421, 225, 258, 208}, {
          417, 253, 212, 204}, {413, 18, 12, 7}}]}],
       Lighting->{{"Ambient", 
          RGBColor[
          0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
         "Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[
          0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
mb7Pb/R9/gfcVvMt
     "]], GraphicsComplex3DBox[CompressedData["
1:eJyFmG9sU2UUxov7gJJFo4SoMTrQzhCciFNR/Hf5YAxzmpGZRR2aRczUxHTV
RI3RiJpIJGQamSM4IigYjZRgYA7GkFjC+OBsMmi1+9OCrF0nd7td2m2iQaez
77l9ztv31IabdDf97ck5533Oue+9t0vW++ubL/F4PEdyn7Lc5/QhX/yQ7+9g
ZU2bt6YlY/1kTT96y0PJ4BZvDiyaDXroyDKHHnxje2PV1x+PMo+p8560deq2
y7a+tTri6t6fYz049HF17nMsz7F31gTffsBydZ5jn6j8vkwRR5yr+lpfj82E
gpJDj/jqbzyQtvb79716b13Eonzv6XrAZZzY3GO+9PkQx1H2tL2csQ43nTi6
uTbpxrlS+wMu/Qk9HPg28dEoc7Wsmv/xE9zwLVcPuFzXxTjWJTnq7CZj/nD7
fOs456V1DV9wzz6HOfTg56YrIlf0JpgTfsHmeqh/5/9iPTj0N6l6lo9zncQH
dV6DF+TdtvpUXXtvgjl89n8572hztcP1qHZ5dzjsMzidP3eKfECciqkDqyaq
HeayX5JLf2RfJJfrkn2humum3XiZMY5PeOeM63P8N+bQgwe+zzx17fE484OK
W2Nczxr1j29+Zz049DTn2TGu0/VR5zV4Qd7yJ9Y23NgbZz6njoU2+0Zxv9B9
BIce/IO2TS0d6ybMdV1tm/7s0HGkb+B3j9yTvv7pCebU3lnHCpxrOnnNi/k5
6dZ9Bzf0Ob6hteelCz9mg0Zf5hzr0/nV1ht+x2pRCTt1HHAZ58nvtgTu68sy
R99lXjlvksu+y3mTXPar1LyBo35338j7dDLF9dB1uzPLfTf3MYd55dINrR31
NnPaZyaTYv933LlYmxT7mNab+5jj9jec4vop3XZdj7kP63qiry1fcMPjNnN3
/7HZf9qvvpri+QE38uZ445szHRWdWZPfbrNvj9Cc6zjST/A7d4WGnu3MMqf8
z2Q4L43NpnTRfEou/UcccKmX/kNv3HcK9LIv0Bv35QK97Bf0xn22QC/7BX0p
Dj9lHPB2GuRk/rkiwT78qr5HR/PXTZI59OB7T5dNX1qVYk7zXzFi+tY8znpw
6G9Wp2VnTd8aHNaDQ0/zv3iE/Tms8j2n44NDT/tqKMH+EA/rdRm8YF3rlnX5
P6xKmf4cSPFc0dyW2/o+kufQgz/vfXDltsosc7pOD6bYf6q/TMeRfQHf/E/z
n13erGXEWTRh1vNZquh6lFz2EXHApV72C3pwqZf9gh5c6mW/oAeXetkv6Etx
Y58piGP6nH9eWBDndalnfs/+n/P6uPAhwnxlbl8Kt0eZE14Y4/UeUd9rB1lv
+hMJ0vNFeZzX26Nke3Ve0x+dd/v9Vb/EtkaZ03XxboL7TnmdAZ5ncz4jzF9p
mt+/avckc/Jp9oyYk0iQ7tv/nhE+430lYfo5rPNKn8GX7Ouu/WH3pOl/v76+
lqrv64eLri/JZZ2IAy71so/Qg0u97Bf04FIv+wU9uNRLP6EvxeGnjGPs87mD
+tU/xD7MU3DkOM+Pcb/LHeBT5dFw/QqbOe1PdwzI9ywPvbc2ROX7pvt+fNeA
fE/0UN/DQ7yuWgVO6HrAZT27GjfWDa6wLap/cW/RPBvrvfysud4CfSku14U4
4FIv1ws9uNRLH6AvxeGDjFOKo+9dyq7reizZX8mxLslRv+SoU3LRr4v+/oDf
BySXv0vI5/P/AIh7Z2w=
    "], {
     {RGBColor[1, 1, 0], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{1, 2, 3}, {143, 166, 137}, {158, 167, 159}, {156, 125,
           112}, {157, 158, 159}, {175, 164, 165}, {107, 108, 109}, {140, 177,
           142}, {45, 44, 46}, {39, 40, 41}, {53, 54, 55}, {166, 135, 137}, {
          55, 82, 53}, {110, 156, 112}, {109, 144, 107}, {178, 157, 159}, {
          164, 163, 165}, {177, 155, 142}, {56, 94, 58}, {78, 126, 80}, {182, 
          175, 165}, {77, 114, 75}, {163, 182, 165}, {51, 50, 52}, {51, 32, 
          29}, {65, 57, 58}, {76, 81, 77}, {95, 96, 97}, {94, 65, 58}, {66, 
          67, 68}, {79, 78, 80}, {73, 50, 46}, {75, 76, 77}, {47, 67, 41}, {
          47, 48, 49}, {105, 104, 106}, {93, 79, 80}, {21, 14, 15}, {14, 13, 
          15}, {2, 16, 3}, {57, 56, 58}, {28, 27, 29}, {31, 48, 24}, {22, 23, 
          24}, {59, 82, 55}, {54, 59, 55}, {167, 178, 159}, {73, 72, 74}, {
          127, 128, 129}, {81, 114, 77}, {125, 111, 112}, {133, 132, 134}, {
          111, 110, 112}, {135, 136, 137}, {141, 140, 142}, {108, 113, 109}, {
          136, 143, 137}, {155, 141, 142}, {126, 93, 80}, {113, 144, 109}}], 
         Polygon3DBox[CompressedData["
1:eJwBdQGK/iFib1JiAgAAAFkAAAAEAAAAFxoGBB4fAQMbHBoZGRoXFgsOFRSV
l5iWl5mamHqXlXgNDgsKKy0bGSgrGRaCg4B/dpORdAQFAgF8mZd6AgUREISF
g4KRk5SSk5WWlBocCgZ0kZBxPldVPTxTUjsjPTwiJT8+JCQ+PSMmQD8lt7i6
CICDZGJFRionRkcsKoOFZmQ9VVM8V1laWEBbWT8/WVc+VVdYVllbXFpTVVZU
QV5bQGZnZWRoaWdmYmNgX2RlY2JzdXZ0DSAhD5Kopo+qs7KneJWTdnl7fHp9
nJl8d3l6eGNlRkWutbSsqausqmdpSEegoYJ/srOgnVp5d1ihooSCVnVzVIem
qIqvtrWuVHNyUZSpqJJYd3VWXHt5Wpitq5aasK2Ym7Gwml1+e1yWq6mUrLSz
qrS1oqERIyIQi7CxjGBjRUKztKGgKisoJxMkIxEVJiUUISYVDxAiHgMsLSsq
tbajoqutrqwUJSQTZWdHRnV3eHbsI4q3
          "]], 
         Polygon3DBox[{{133, 134, 139, 104, 102}, {34, 60, 59, 54, 30}, {104, 
          139, 140, 141, 106}, {57, 65, 64, 38, 33}, {136, 135, 138, 95, 
          97}, {132, 162, 163, 164, 134}, {158, 157, 160, 127, 129}, {186, 19,
           17, 5, 8}, {138, 129, 128, 98, 95}, {31, 24, 23, 4, 1}, {183, 6, 
          10, 11, 184}, {11, 20, 19, 186, 184}, {5, 4, 6, 183, 8}, {67, 66, 
          69, 39, 41}, {44, 71, 72, 73, 46}, {28, 29, 32, 13, 10}}], 
         Polygon3DBox[{{76, 75, 68, 67, 47, 49}, {50, 73, 74, 78, 79, 52}, {
          54, 53, 49, 48, 31, 30}, {72, 105, 106, 110, 111, 74}, {27, 45, 46, 
          50, 51, 29}, {108, 107, 97, 96, 66, 68}, {48, 47, 41, 40, 22, 24}, {
          32, 51, 52, 56, 57, 33}}], 
         Polygon3DBox[{{75, 114, 115, 116, 113, 108, 68}, {111, 125, 124, 123,
           126, 78, 74}, {138, 168, 169, 170, 167, 158, 129}, {141, 155, 154, 
          153, 156, 110, 106}, {53, 82, 83, 84, 81, 76, 49}, {107, 144, 145, 
          146, 143, 136, 97}, {79, 93, 92, 91, 94, 56, 52}, {164, 175, 174, 
          173, 176, 139, 134}}]}],
       Lighting->Automatic]}, 
     {RGBColor[1, 1, 0], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{7, 9, 185}, {9, 12, 18}, {12, 9, 7}, {185, 9, 18}}], 
         Polygon3DBox[{{185, 18, 12, 7}}]}],
       Lighting->Automatic]}, {}, {}, {}, {}, {}},
    VertexNormals->CompressedData["
1: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
     "]]},
  Axes->True,
  AxesLabel->{
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm], 
    FormBox["x", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{573., 616.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{-2, 2}, {0, 2}, {-1.999, 1.9999}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.5459733232913019, 1.2639216385178642`, 3.0910217116579073`},
  ViewVertical->{-0.057337029266013535`, 0.9629816057771922, 
   0.2633987319820064}]], "Output",
 CellChangeTimes->{3.6953143593739986`*^9, 3.6953144134877796`*^9, 
  3.695314484258733*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating Moment", "Subsection",
 CellChangeTimes->{{3.695314679895681*^9, 3.6953146827735705`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"buoyForce", "[", 
   RowBox[{"n_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"mass", "[", "n", "]"}], "*", 
   RowBox[{"(", "9.81", ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"buoyForce2D", "[", 
   RowBox[{
    RowBox[{"n_", "?", "NumberQ"}], ",", 
    RowBox[{"theta_", "?", "NumberQ"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"mass2D", "[", "n", "]"}], "*", 
   RowBox[{"(", "9.81", ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"momentArm", "[", 
   RowBox[{"n_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"cobX", "[", 
      RowBox[{"n", ",", "theta"}], "]"}], "-", 
     RowBox[{"comX", "[", "n", "]"}]}], ",", 
    RowBox[{
     RowBox[{"cobY", "[", 
      RowBox[{"n", ",", "theta"}], "]"}], "-", 
     RowBox[{"comY", "[", "n", "]"}]}], ",", 
    RowBox[{
     RowBox[{"cobZ", "[", 
      RowBox[{"n", ",", "theta"}], "]"}], "-", 
     RowBox[{"comZ", "[", "n", "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moment", "[", 
    RowBox[{"n_", ",", "theta_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"momentArm", "[", 
     RowBox[{"n", ",", "theta"}], "]"}], "\[Cross]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"buoyForce", "[", 
        RowBox[{"n", ",", "theta"}], "]"}], "*", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "theta", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"buoyForce", "[", 
        RowBox[{"n", ",", "theta"}], "]"}], "*", 
       RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0"}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"momentArm2D", "[", 
   RowBox[{"n_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{
     RowBox[{"cobY2D", "[", 
      RowBox[{"n", ",", "theta"}], "]"}], "-", 
     RowBox[{"comY2D", "[", "n", "]"}]}], ",", 
    RowBox[{
     RowBox[{"cobZ2D", "[", 
      RowBox[{"n", ",", "theta"}], "]"}], "-", 
     RowBox[{"comZ2D", "[", "n", "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"moment2D", "[", 
   RowBox[{"n_", ",", "theta_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"momentArm2D", "[", 
    RowBox[{"n", ",", "theta"}], "]"}], "\[Cross]", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"buoyForce2D", "[", 
       RowBox[{"n", ",", "theta"}], "]"}], "*", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "theta", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"buoyForce2D", "[", 
       RowBox[{"n", ",", "theta"}], "]"}], "*", 
      RowBox[{"Cos", "[", "theta", "]"}]}]}], "}"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6950822632176957`*^9, 3.695082274924776*^9}, 
   3.6950823098289537`*^9, {3.6950824339484243`*^9, 3.6950825867954655`*^9}, {
   3.6950826267321625`*^9, 3.695082632763682*^9}, {3.6950828060662794`*^9, 
   3.695082809345457*^9}, {3.6951377608490868`*^9, 3.695137773316742*^9}, {
   3.6951387525442095`*^9, 3.695138774304563*^9}, 3.6952240532259173`*^9, {
   3.695309362407199*^9, 3.6953093843240337`*^9}, {3.695310292772376*^9, 
   3.695310297192165*^9}, {3.6953110561140347`*^9, 3.6953110568226304`*^9}, {
   3.6953112260613675`*^9, 3.6953112276413803`*^9}, {3.6953113712184825`*^9, 
   3.695311375372959*^9}, {3.695311436774684*^9, 3.695311441322872*^9}, 
   3.6953118883610497`*^9, {3.6953146920936537`*^9, 3.6953147079408703`*^9}, {
   3.6953148456834793`*^9, 3.695314845884712*^9}, 3.695314926002017*^9, 
   3.695385409693109*^9, {3.6953865964041357`*^9, 3.695386673544351*^9}, {
   3.6953889441450267`*^9, 3.6953889781420984`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cobZ2D", "[", 
   RowBox[{".4", ",", 
    RowBox[{"N", "[", 
     RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"momentArm2D", "[", 
     RowBox[{".4", ",", 
      RowBox[{"N", "[", 
       RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"moment2D", "[", 
     RowBox[{".4", ",", 
      RowBox[{"N", "[", 
       RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6953147284722047`*^9, 3.695314734843847*^9}, {
  3.69531486761593*^9, 3.69531487511512*^9}, {3.6953866577731624`*^9, 
  3.695386669291251*^9}, {3.695386910854019*^9, 3.6953869143786907`*^9}, {
  3.6953870877512393`*^9, 3.695387104348121*^9}, {3.695388602542862*^9, 
  3.6953886026660924`*^9}, {3.6953887138024006`*^9, 3.6953887370570707`*^9}}],

Cell[BoxData["0.6266486867938944`"], "Output",
 CellChangeTimes->{
  3.6953869405750017`*^9, 3.695388242518978*^9, {3.695388591386916*^9, 
   3.695388610179658*^9}, {3.695388711322014*^9, 3.6953887485841446`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comZ2D", "[", ".4", "]"}]], "Input",
 CellChangeTimes->{{3.695388766614942*^9, 3.695388773840423*^9}}],

Cell[BoxData["0.76821226926869`"], "Output",
 CellChangeTimes->{{3.69538877064863*^9, 3.695388841579308*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{"y", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"y", ",", "z"}], "}"}], "\[Element]", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{"submerged2D", "[", 
        RowBox[{".4", ",", ".7", ",", 
         RowBox[{"b", "/.", 
          RowBox[{"findB2D", "[", 
           RowBox[{".4", ",", ".7"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "z"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
  RowBox[{"massOfWater2D", "[", 
   RowBox[{".4", ",", ".7", ",", 
    RowBox[{"b", "/.", 
     RowBox[{"findB2D", "[", 
      RowBox[{".4", ",", ".7"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6953886540734687`*^9, 3.6953886761542907`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.35158504675610125`"}]], "Output",
 CellChangeTimes->{3.695388684482895*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"momentArm2D", "[", 
  RowBox[{".4", ",", 
   RowBox[{"N", "[", 
    RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6953888495593653`*^9, 3.695388858628201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "0.268292339469801`"}], ",", 
   RowBox[{"-", "0.1415635824747956`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6953888812449613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"moment2D", "[", 
  RowBox[{".4", ",", 
   RowBox[{"N", "[", 
    RowBox[{"\[Pi]", "/", "6"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.695388884599703*^9, 3.6953888897612047`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction","verserr",
   "\"An error due to an incompatible function call was encountered \
evaluating the function \
\\!\\(\\*RowBox[{\\\"\\\\\\\"setFacets\\\\\\\"\\\"}]\\). The library was \
compiled with a previous WolframLibrary version. Recompile with the current \
version to fix the error.\"",2,135,103,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.69538891441699*^9}],

Cell[BoxData[
 TemplateBox[{
  "BoundaryMeshRegion","could not make representation",
   "\"-- Message text not found -- \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"TetGenLinkMesh\\\\\\\"\\\"}]\\))\"",2,135,104,
   29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388914471139*^9}],

Cell[BoxData[
 TemplateBox[{
  "TriangulateMesh","tmfail",
   "\"TriangulateMesh failed to triangulate the mesh.\"",2,135,105,
   29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388914523278*^9}],

Cell[BoxData[
 TemplateBox[{
  "DiscretizeRegion","drf",
   "\"\\!\\(\\*RowBox[{\\\"DiscretizeRegion\\\"}]\\) was unable to discretize \
the region \\!\\(\\*RowBox[{\\\"ImplicitRegion\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]\\).\"",2,135,106,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953889146095123`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","femtemnbb",
   "\"The bounds for \\!\\(\\*RowBox[{\\\"ImplicitRegion\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"2.5`\\\", \\\" \\\", RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]], \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"6\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\"+\\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\")\\\"}]}]}], \\\"\[LessEqual]\\\", \\\"z\\\", \\\"\
\[LessEqual]\\\", \\\"1\\\"}], \\\"&&\\\", RowBox[{\\\"x\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}], \\\"&&\\\", RowBox[{\\\"y\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) are \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\). Unless finite numeric \
bounds are specified, the mesh generation will constrain the region to have \
finite bounds.\"",2,135,107,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953889180394*^9}],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction","verserr",
   "\"An error due to an incompatible function call was encountered \
evaluating the function \
\\!\\(\\*RowBox[{\\\"\\\\\\\"setFacets\\\\\\\"\\\"}]\\). The library was \
compiled with a previous WolframLibrary version. Recompile with the current \
version to fix the error.\"",2,135,108,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388922158596*^9}],

Cell[BoxData[
 TemplateBox[{
  "BoundaryMeshRegion","could not make representation",
   "\"-- Message text not found -- \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"TetGenLinkMesh\\\\\\\"\\\"}]\\))\"",2,135,109,
   29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388922212742*^9}],

Cell[BoxData[
 TemplateBox[{
  "TriangulateMesh","tmfail",
   "\"TriangulateMesh failed to triangulate the mesh.\"",2,135,110,
   29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388922266389*^9}],

Cell[BoxData[
 TemplateBox[{
  "DiscretizeRegion","drf",
   "\"\\!\\(\\*RowBox[{\\\"DiscretizeRegion\\\"}]\\) was unable to discretize \
the region \\!\\(\\*RowBox[{\\\"ImplicitRegion\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]\\).\"",2,135,111,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388922322039*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","femtemnbb",
   "\"The bounds for \\!\\(\\*RowBox[{\\\"ImplicitRegion\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"2.5`\\\", \\\" \\\", RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]], \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"6\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\"+\\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\")\\\"}]}]}], \\\"\[LessEqual]\\\", \\\"z\\\", \\\"\
\[LessEqual]\\\", \\\"1\\\"}], \\\"&&\\\", RowBox[{\\\"x\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}], \\\"&&\\\", RowBox[{\\\"y\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) are \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\). Unless finite numeric \
bounds are specified, the mesh generation will constrain the region to have \
finite bounds.\"",2,135,112,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388925781969*^9}],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction","verserr",
   "\"An error due to an incompatible function call was encountered \
evaluating the function \
\\!\\(\\*RowBox[{\\\"\\\\\\\"setFacets\\\\\\\"\\\"}]\\). The library was \
compiled with a previous WolframLibrary version. Recompile with the current \
version to fix the error.\"",2,135,113,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953889299170837`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"LibraryFunction\\\", \\\
\"::\\\", \\\"verserr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,135,114,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953889300003114`*^9}],

Cell[BoxData[
 TemplateBox[{
  "BoundaryMeshRegion","could not make representation",
   "\"-- Message text not found -- \
(\\!\\(\\*RowBox[{\\\"\\\\\\\"TetGenLinkMesh\\\\\\\"\\\"}]\\))\"",2,135,115,
   29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953889300594673`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"BoundaryMeshRegion\\\", \
\\\"::\\\", \\\"\\\\\\\"could not make representation\\\\\\\"\\\"}], \
\\\"MessageName\\\"]\\) will be suppressed during this calculation.\"",2,135,
   116,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388930116267*^9}],

Cell[BoxData[
 TemplateBox[{
  "TriangulateMesh","tmfail",
   "\"TriangulateMesh failed to triangulate the mesh.\"",2,135,117,
   29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388930171918*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"TriangulateMesh\\\", \\\
\"::\\\", \\\"tmfail\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,135,118,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388930228571*^9}],

Cell[BoxData[
 TemplateBox[{
  "DiscretizeRegion","drf",
   "\"\\!\\(\\*RowBox[{\\\"DiscretizeRegion\\\"}]\\) was unable to discretize \
the region \\!\\(\\*RowBox[{\\\"ImplicitRegion\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]\\).\"",2,135,119,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388930266673*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"DiscretizeRegion\\\", \
\\\"::\\\", \\\"drf\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,135,120,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6953889303218336`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","femtemnbb",
   "\"The bounds for \\!\\(\\*RowBox[{\\\"ImplicitRegion\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"2.5`\\\", \\\" \\\", RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"]\\\"}]}]], \\\"+\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"6\\\"], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\"+\\\", SuperscriptBox[\\\"x\\\", \
\\\"2\\\"]}], \\\")\\\"}]}]}], \\\"\[LessEqual]\\\", \\\"z\\\", \\\"\
\[LessEqual]\\\", \\\"1\\\"}], \\\"&&\\\", RowBox[{\\\"x\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}], \\\"&&\\\", RowBox[{\\\"y\\\", \\\"\
\[GreaterEqual]\\\", \\\"0\\\"}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) are \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]\\). Unless finite numeric \
bounds are specified, the mesh generation will constrain the region to have \
finite bounds.\"",2,135,121,29078681105609293571,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.695388933655821*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2.9737030717468285`"}], " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      FractionBox["1", "4"], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
       RowBox[{"ImplicitRegion", "[", 
        RowBox[{
         RowBox[{"expBoat", "[", "0.4`", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}]}], ",", "0.`", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.695389507899537*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating Prismatic Coefficient", "Subsection",
 CellChangeTimes->{{3.6953782077966948`*^9, 3.695378228725086*^9}}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "sliceBoat", "]"}], "\[IndentingNewLine]", 
 RowBox[{"curB", "=", 
  RowBox[{"b", "/.", 
   RowBox[{"findB", "[", 
    RowBox[{".4", ",", "0"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMax", "[", "n_", "]"}], " ", ":=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", "4"}], ")"}], "/", "6"}], ")"}], "-", 
     RowBox[{"curB", "[", "n", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xLim", " ", "=", " ", 
  RowBox[{"x", "/.", 
   RowBox[{"xMax", "[", ".4", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sliceBoat", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"submerged2D", "[", 
    RowBox[{"n", ",", "0", ",", 
     RowBox[{"curB", "[", ".4", "]"}]}], "]"}], "&&", 
   RowBox[{
    RowBox[{"-", "xLim"}], "\[LessEqual]", "x", "\[LessEqual]", 
    "xLim"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"sliceBoat", "[", ".4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prisCoeff", "[", 
   RowBox[{"n_", "?", "NumberQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"submergedRegion", "[", 
         RowBox[{"n", ",", "0", ",", "curB"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "5"}]}], "]"}], "/", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{"sliceBoat", "[", "n", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"prisCoeff", "[", ".4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"sliceBoat", "[", ".4", "]"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[LessEqual]", "x", "\[LessEqual]", "2"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Opacity", "[", ".25", "]"}]}]}], "]"}], ",", 
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{
      RowBox[{"expBoat", "[", ".4", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1.999"}], ",", "1.999"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "2"}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
       RowBox[{"ImplicitRegion", "[", 
        RowBox[{
         RowBox[{"sliceBoat", "[", ".4", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Integrate", "[", 
     RowBox[{"1", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
       RowBox[{"ImplicitRegion", "[", 
        RowBox[{
         RowBox[{"expBoat", "[", ".4", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzjlIgnEABXCrIYgUjIwcRBRNaS6IIlMLO0g0dWgwKPMrO7AwIqHoQMSC
kgYTgywLaitLyKJjCAmlg+iDaImCyBDsAIcsdMj3Hx4/eMPjCUwjOiqfwWDw
coFT1Kuiez6puNztUMLzMpcKzj6zW6Gv1quDfoGmD37dcIbh9OjaOFSz3v1w
XaLYhnYb9wiKDdlzGLNUxshe2kr84PJpyErOPcCLe+EbtPa1pOGZ/DGvJ+dO
+1ABlNErhTCftpRBbnGDBhqVlB4OZhKHUKUuDUO3M8I05VyO9LJhIzPOhW7e
J7E8EBLDeFYkhUJdsAqasp5qmLrtaoJ/RppI3Y21QT3HQZRywlpoDtGdpJcs
UjDKaOyH9emaCWiv4E/CgdNrB2yekTvh00lggfz65i2RX1GhB4p+DMQN34EP
BpOyVVjkfQnAOlvJJtw7pvYh03xFdCVSv1C7pc/AfzKa6ZM=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"submerged2D", "[", 
    RowBox[{".4", ",", "0", ",", 
     RowBox[{"b", "/.", 
      RowBox[{"findB", "[", 
       RowBox[{".4", ",", "0"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6953811495163975`*^9, 3.6953811543885746`*^9}, {
   3.695381272419587*^9, 3.6953813014494333`*^9}, {3.69538137879643*^9, 
   3.695381380294758*^9}, 3.6953823589529696`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.695382376879597*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findB", "[", 
  RowBox[{".4", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.695382480489851*^9, 3.695382485914731*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", "\[Rule]", "0.7055731027667204`"}], "}"}]], "Output",
 CellChangeTimes->{3.6953825117791004`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "-", "4"}], ")"}], "/", "6"}], ")"}], "-", 
     "b"}], "/.", 
    RowBox[{"findB", "[", 
     RowBox[{".4", ",", "0"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6953819395048676`*^9, 3.6953820061648483`*^9}, {
  3.6953820433838167`*^9, 3.695382049371724*^9}, {3.695382157121085*^9, 
  3.6953821576685295`*^9}, {3.6953821934541035`*^9, 3.695382196019416*^9}, {
  3.695382239122075*^9, 3.6953822418084407`*^9}, {3.6953822770095396`*^9, 
  3.6953822946592584`*^9}, {3.6953824295248256`*^9, 3.695382430423966*^9}, {
  3.69538256492885*^9, 3.69538256807016*^9}, {3.6953826129833*^9, 
  3.6953826232400675`*^9}, {3.6953826623265424`*^9, 3.6953826626320686`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "1.4944693428104578`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6953819863268623`*^9, 3.695381992520715*^9}, 
   3.695382031972763*^9, 3.6953820743038416`*^9, 3.6953821834949136`*^9, 
   3.6953822215751867`*^9, 3.6953822685631623`*^9, 3.6953823195636516`*^9, 
   3.695382403032071*^9, 3.6953824559588337`*^9, {3.6953825685384073`*^9, 
   3.695382571244525*^9}, 3.6953826141631837`*^9, 3.695382648542587*^9, 
   3.6953826886186047`*^9, 3.695383239776064*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 101, "Title"],
Cell[CellGroupData[{
Cell[709, 27, 155, 2, 49, "Subsection"],
Cell[867, 31, 5463, 149, 180, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6355, 184, 158, 3, 30, "Input"],
Cell[6516, 189, 656, 15, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7209, 209, 1151, 27, 50, "Input"],
Cell[8363, 238, 2284, 42, 122, "Output"],
Cell[10650, 282, 294, 7, 21, "Message"],
Cell[10947, 291, 294, 7, 21, "Message"],
Cell[11244, 300, 294, 7, 21, "Message"],
Cell[11541, 309, 347, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11925, 321, 871, 23, 50, "Input"],
Cell[12799, 346, 1851, 37, 130, "Output"],
Cell[14653, 385, 293, 7, 21, "Message"],
Cell[14949, 394, 291, 7, 21, "Message"],
Cell[15243, 403, 291, 7, 21, "Message"],
Cell[15537, 412, 346, 7, 21, "Message"],
Cell[15886, 421, 294, 7, 21, "Message"],
Cell[16183, 430, 294, 7, 21, "Message"],
Cell[16480, 439, 294, 7, 21, "Message"],
Cell[16777, 448, 347, 7, 21, "Message"],
Cell[17127, 457, 292, 7, 21, "Message"],
Cell[17422, 466, 294, 7, 21, "Message"],
Cell[17719, 475, 294, 7, 21, "Message"],
Cell[18016, 484, 345, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18398, 496, 928, 23, 50, "Input"],
Cell[19329, 521, 2011, 38, 130, "Output"],
Cell[21343, 561, 293, 7, 21, "Message"],
Cell[21639, 570, 294, 7, 21, "Message"],
Cell[21936, 579, 294, 7, 21, "Message"],
Cell[22233, 588, 347, 7, 21, "Message"],
Cell[22583, 597, 293, 7, 21, "Message"],
Cell[22879, 606, 295, 7, 21, "Message"],
Cell[23177, 615, 295, 7, 21, "Message"],
Cell[23475, 624, 344, 7, 21, "Message"],
Cell[23822, 633, 296, 7, 21, "Message"],
Cell[24121, 642, 294, 7, 21, "Message"],
Cell[24418, 651, 296, 7, 21, "Message"],
Cell[24717, 660, 345, 7, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25099, 672, 779, 21, 50, "Input"],
Cell[25881, 695, 1855, 36, 130, "Output"],
Cell[27739, 733, 286, 6, 21, "Message"],
Cell[28028, 741, 288, 6, 21, "Message"],
Cell[28319, 749, 286, 6, 21, "Message"],
Cell[28608, 757, 347, 7, 21, "Message"],
Cell[28958, 766, 287, 6, 21, "Message"],
Cell[29248, 774, 287, 6, 21, "Message"],
Cell[29538, 782, 287, 6, 21, "Message"],
Cell[29828, 790, 344, 7, 21, "Message"],
Cell[30175, 799, 287, 6, 21, "Message"],
Cell[30465, 807, 287, 6, 21, "Message"],
Cell[30755, 815, 287, 6, 21, "Message"],
Cell[31045, 823, 344, 7, 21, "Message"],
Cell[31392, 832, 288, 6, 21, "Message"],
Cell[31683, 840, 288, 6, 21, "Message"],
Cell[31974, 848, 286, 6, 21, "Message"],
Cell[32263, 856, 344, 7, 21, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32656, 869, 124, 1, 49, "Subsection"],
Cell[32783, 872, 4686, 127, 180, "Input",
 InitializationCell->True],
Cell[37472, 1001, 4243, 114, 218, "Input",
 InitializationCell->True],
Cell[41718, 1117, 5062, 141, 351, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[46805, 1262, 177, 3, 30, "Input"],
Cell[46985, 1267, 141, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47163, 1274, 1470, 44, 88, "Input"],
Cell[48636, 1320, 5940, 105, 373, "Output"],
Cell[54579, 1427, 142, 2, 30, "Output"],
Cell[54724, 1431, 157, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54918, 1439, 210, 5, 30, "Input"],
Cell[55131, 1446, 139, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55307, 1454, 440, 12, 30, "Input"],
Cell[55750, 1468, 116, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55903, 1474, 1237, 32, 69, "Input"],
Cell[57143, 1508, 385, 6, 30, "Output"],
Cell[57531, 1516, 17563, 311, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75131, 1832, 253, 5, 30, "Input"],
Cell[75387, 1839, 681, 22, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76105, 1866, 219, 4, 30, "Input"],
Cell[76327, 1872, 112, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76476, 1878, 354, 7, 30, "Input"],
Cell[76833, 1887, 339, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77209, 1898, 364, 9, 30, "Input"],
Cell[77576, 1909, 669, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78282, 1935, 1119, 33, 85, "Input"],
Cell[79404, 1970, 123227, 2021, 486, "Output"]
}, Open  ]],
Cell[202646, 3994, 2303, 55, 107, "Input"],
Cell[CellGroupData[{
Cell[204974, 4053, 1685, 43, 88, "Input"],
Cell[206662, 4098, 28804, 495, 631, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235515, 4599, 108, 1, 49, "Subsection"],
Cell[235626, 4602, 3619, 94, 180, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[239270, 4700, 917, 22, 88, "Input"],
Cell[240190, 4724, 213, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240440, 4732, 126, 2, 30, "Input"],
Cell[240569, 4736, 109, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240715, 4742, 806, 22, 50, "Input"],
Cell[241524, 4766, 106, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241667, 4773, 214, 5, 30, "Input"],
Cell[241884, 4780, 200, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242121, 4790, 211, 5, 30, "Input"],
Cell[242335, 4797, 460, 9, 39, "Message"],
Cell[242798, 4808, 315, 7, 21, "Message"],
Cell[243116, 4817, 243, 6, 21, "Message"],
Cell[243362, 4825, 420, 8, 21, "Message"],
Cell[243785, 4835, 1632, 25, 59, "Message"],
Cell[245420, 4862, 461, 9, 39, "Message"],
Cell[245884, 4873, 315, 7, 21, "Message"],
Cell[246202, 4882, 243, 6, 21, "Message"],
Cell[246448, 4890, 418, 8, 21, "Message"],
Cell[246869, 4900, 1634, 25, 59, "Message"],
Cell[248506, 4927, 463, 9, 39, "Message"],
Cell[248972, 4938, 355, 7, 21, "Message"],
Cell[249330, 4947, 317, 7, 21, "Message"],
Cell[249650, 4956, 398, 8, 21, "Message"],
Cell[250051, 4966, 243, 6, 21, "Message"],
Cell[250297, 4974, 352, 7, 21, "Message"],
Cell[250652, 4983, 418, 8, 21, "Message"],
Cell[251073, 4993, 352, 7, 21, "Message"],
Cell[251428, 5002, 1634, 25, 59, "Message"],
Cell[253065, 5029, 632, 18, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253746, 5053, 123, 1, 49, "Subsection"],
Cell[253872, 5056, 4925, 133, 335, "Input"],
Cell[CellGroupData[{
Cell[258822, 5193, 498, 12, 30, "Input"],
Cell[259323, 5207, 77, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259437, 5213, 148, 3, 30, "Input"],
Cell[259588, 5218, 141, 3, 30, "Output"]
}, Open  ]],
Cell[259744, 5224, 918, 21, 30, InheritFromParent],
Cell[260665, 5247, 513, 8, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

